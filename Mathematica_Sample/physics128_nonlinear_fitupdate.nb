(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    228952,       4612]
NotebookOptionsPosition[    227179,       4555]
NotebookOutlinePosition[    227536,       4571]
CellTagsIndexPosition[    227493,       4568]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Physics 128L Nonlinear Model Fit examples", "Input",
 CellChangeTimes->{{3.5376384780147963`*^9, 3.537638491085895*^9}, {
  3.537638521770475*^9, 3.537638523712471*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"First", " ", "I", " ", "will", " ", "invent", " ", "some", " ", 
     RowBox[{"data", ".", "  ", "Ignore"}], " ", "this", " ", "step", " ", 
     "for", " ", "your", " ", "real", " ", "lab", " ", 
     RowBox[{"data", "!"}], "  ", "My", " ", "made"}], "-", 
    RowBox[{
    "up", " ", "data", " ", "will", " ", "be", " ", "the", " ", "sum", " ", 
     "of", " ", "several", " ", 
     RowBox[{"components", ":", " ", 
      RowBox[{
       RowBox[{"a", " ", "constant"}], " ", "..."}]}]}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fakedata", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"3.45", " ", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "30"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "...", " ", "and", " ", "a", " ", "Gaussian", " ", "peak", " ", 
      "centered", " ", "around", " ", "19"}], "..."}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fakedata", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fakedata", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
        RowBox[{"5.67", "*", 
         RowBox[{"E", "^", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "18.78"}], ")"}], "/", ".978"}], ")"}], "^", 
            "2"}]}]}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "30"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"...", " ", "and"}], ",", " ", 
     RowBox[{"what", " ", "the", " ", "heck"}], ",", " ", 
     RowBox[{"some", " ", "Gaussian", " ", "random", " ", 
      RowBox[{"noise", ".", " ", 
       RowBox[{"I", "'"}]}], "ll", " ", "make", " ", "the", " ", "noise", " ",
       "worse", " ", "on", " ", "the", " ", "right"}], ",", " ", 
     RowBox[{
      RowBox[{"that", "'"}], "s", " ", "the", " ", "sort", " ", "of", " ", 
      "thing", " ", "that", " ", "might", " ", 
      RowBox[{"happen", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fakedata", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fakedata", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "+", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", 
           RowBox[{"0.1", "+", 
            RowBox[{"i", "*", 
             RowBox[{"i", "/", "500"}]}]}]}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "30"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"myErrors", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"0.1", "+", 
       RowBox[{"i", "*", 
        RowBox[{"i", "/", "500"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "30"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.537638530014674*^9, 3.537638846647485*^9}, {
  3.53764022829119*^9, 3.537640311143538*^9}, {3.537640404642086*^9, 
  3.537640664624758*^9}, {3.537640722633292*^9, 3.537640726391675*^9}, {
  3.537640819915098*^9, 3.53764082271972*^9}, {3.537641486658243*^9, 
  3.537641491842724*^9}, {3.5376424376255836`*^9, 3.537642437667967*^9}, {
  3.537642676601151*^9, 3.5376427015044823`*^9}, {3.53764490693312*^9, 
  3.537644943389203*^9}, {3.5376451763901043`*^9, 3.537645182837232*^9}, {
  3.537645727968359*^9, 3.5376457667787647`*^9}, {3.537645846602933*^9, 
  3.537645848802723*^9}, {3.5376460093853197`*^9, 3.537646009448875*^9}, {
  3.537646060337173*^9, 3.5376460744762363`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.10200000000000001`", ",", "0.10800000000000001`", ",", 
   "0.11800000000000001`", ",", "0.132`", ",", "0.15000000000000002`", ",", 
   "0.172`", ",", "0.198`", ",", "0.228`", ",", "0.262`", ",", 
   "0.30000000000000004`", ",", "0.34199999999999997`", ",", "0.388`", ",", 
   "0.43800000000000006`", ",", "0.492`", ",", "0.55`", ",", "0.612`", ",", 
   "0.6779999999999999`", ",", "0.748`", ",", "0.822`", ",", "0.9`", ",", 
   "0.982`", ",", "1.068`", ",", "1.1580000000000001`", ",", "1.252`", ",", 
   "1.35`", ",", "1.4520000000000002`", ",", "1.558`", ",", 
   "1.6680000000000001`", ",", "1.782`", ",", "1.9000000000000001`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.692741118084125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"and", " ", 
     RowBox[{"I", "'"}], "ll", " ", "build", " ", "that", " ", "into", " ", 
     "a", " ", "ListPlot"}], "-", 
    RowBox[{"style", " ", 
     RowBox[{"table", "."}]}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"datalist", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"fakedata", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "30"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"datalist", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"I", "'"}], "ll", " ", "toss", " ", "in", " ", "the", " ", 
      "error"}], "-", 
     RowBox[{"bar", " ", "version", " ", 
      RowBox[{"too", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"datalistwitherrors", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"fakedata", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", 
         RowBox[{"myErrors", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "30"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"myListPlot", " ", "=", " ", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{"datalistwitherrors", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.537638530014674*^9, 3.537638846647485*^9}, {
   3.53764022829119*^9, 3.537640311143538*^9}, {3.537640404642086*^9, 
   3.537640812065999*^9}, {3.5376411358721647`*^9, 3.537641138367547*^9}, {
   3.537644877255254*^9, 3.53764489161224*^9}, 3.537644929890416*^9, {
   3.5376457303409023`*^9, 3.537645768856888*^9}, {3.5376458533449917`*^9, 
   3.537645855179686*^9}, {3.537646081371023*^9, 3.5376460859727907`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3.3732816259660248`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3.362661660769326`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3.405000619010071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3.225774103950346`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3.510104499815529`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3.2327751893137466`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3.2216923161754316`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3.312341519406916`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3.268601349380937`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3.900140047297829`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "3.2186083766397986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "3.2804735604655573`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "2.465224537704217`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "3.909751469664847`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "3.725469993106606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "3.141630242124961`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "3.852896350455578`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "6.663664824870565`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "9.799322558436556`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "4.688113749318705`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "4.2699399614987765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "3.5473264456305933`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "1.9880552485558287`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "2.2822511898108395`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "3.7330897926774815`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "5.147907236512236`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "2.042684117245801`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "2.5283930616643184`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "3.327933602601889`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "3.6708752668035705`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.692741128131811*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E2P7RWu/sPlABVwyFdW0dj9DMbncMgQePOt
wJYbyhdweM7gtjzpHCeUL+LgzsC0eqMID5Qv4XA6kdt25x2YvIzDjd9/57Ed
g/EVHFg9JV6uqYeZr+QQwHqrTEINxldxyNrGvqDGmB/KV3PoTV20f+t+mH4N
hzd7eN5k2MHUazkwPildcnwHM5Sv45A/zfe4tjtMv56D3y8Ts8NneaF8AweG
zABOfiWYeYYOv9ckBO2+xAflGzkU+FQemL5cCso3dvB/mHfOYaYylG/icJmR
9cmCA0JQvqmDnaiWSraIIJRv5qB9kHHDmwRYeJg7XGU2ZhU+/98ewrdw4Pia
/ZLHiQkqb+ngtyxFL+4uzH1WDmuWzvtXMl0Eyrd2eMZhezQrnAHKt3FY5GCl
ombFAuXbOjBVCS+fPR8WHnYOF9+J3Pocy+sAAFAbbVc=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.546875, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 30.}, {0, 9.799322558436556}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6927411283155107`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3.3732816259660248`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.10200000000000001`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3.362661660769326`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.10800000000000001`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3.405000619010071`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.11800000000000001`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "3.225774103950346`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.132`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "3.510104499815529`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.15000000000000002`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "3.2327751893137466`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.172`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "3.2216923161754316`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.198`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "3.312341519406916`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.228`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"9", ",", "3.268601349380937`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.262`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "3.900140047297829`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.30000000000000004`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"11", ",", "3.2186083766397986`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.34199999999999997`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"12", ",", "3.2804735604655573`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.388`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"13", ",", "2.465224537704217`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.43800000000000006`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"14", ",", "3.909751469664847`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.492`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"15", ",", "3.725469993106606`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.55`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"16", ",", "3.141630242124961`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.612`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"17", ",", "3.852896350455578`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.6779999999999999`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"18", ",", "6.663664824870565`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.748`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"19", ",", "9.799322558436556`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.822`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "4.688113749318705`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.9`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"21", ",", "4.2699399614987765`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.982`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"22", ",", "3.5473264456305933`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "1.068`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"23", ",", "1.9880552485558287`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "1.1580000000000001`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"24", ",", "2.2822511898108395`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "1.252`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"25", ",", "3.7330897926774815`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "1.35`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"26", ",", "5.147907236512236`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "1.4520000000000002`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"27", ",", "2.042684117245801`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "1.558`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"28", ",", "2.5283930616643184`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "1.6680000000000001`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"29", ",", "3.327933602601889`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "1.782`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "3.6708752668035705`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "1.9000000000000001`", "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.692741128323799*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E2P7RWu/sPlABVwyFdW0dj9DMbncMgQePOt
wJYbyhdweM7gtjzpHCeUL+LgzsC0eqMID5Qv4XA6kdt25x2YvIzDjd9/57Ed
g/EVHFg9JV6uqYeZr+QQwHqrTEINxldxyNrGvqDGmB/KV3PoTV20f+t+mH4N
hzd7eN5k2MHUazkwPildcnwHM5Sv45A/zfe4tjtMv56D3y8Ts8NneaF8AweG
zABOfiWYeYYOv9ckBO2+xAflGzkU+FQemL5cCso3dvB/mHfOYaYylG/icJmR
9cmCA0JQvqmDnaiWSraIIJRv5qB9kHHDmwRYeJg7XGU2ZhU+/98ewrdw4Pia
/ZLHiQkqb+ngtyxFL+4uzH1WDmuWzvtXMl0Eyrd2eMZhezQrnAHKt3FY5GCl
ombFAuXbOjBVCS+fPR8WHnYOF9+J3Pocy+sAAFAbbVc=
      
      "]], {{LineBox[{{1., 3.4752816259660246`}, {1., 3.271281625966025}}], 
       LineBox[{
        Offset[{1.5, 0}, {1., 3.4752816259660246`}], 
         Offset[{-1.5, 0}, {1., 3.4752816259660246`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1., 3.271281625966025}], 
         Offset[{-1.5, 0}, {1., 3.271281625966025}]}]}, {
       LineBox[{{2., 3.470661660769326}, {2., 3.254661660769326}}], 
       LineBox[{
        Offset[{1.5, 0}, {2., 3.470661660769326}], 
         Offset[{-1.5, 0}, {2., 3.470661660769326}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2., 3.254661660769326}], 
         Offset[{-1.5, 0}, {2., 3.254661660769326}]}]}, {
       LineBox[{{3., 3.523000619010071}, {3., 3.287000619010071}}], 
       LineBox[{
        Offset[{1.5, 0}, {3., 3.523000619010071}], 
         Offset[{-1.5, 0}, {3., 3.523000619010071}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3., 3.287000619010071}], 
         Offset[{-1.5, 0}, {3., 3.287000619010071}]}]}, {
       LineBox[{{4., 3.357774103950346}, {4., 3.093774103950346}}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 3.357774103950346}], 
         Offset[{-1.5, 0}, {4., 3.357774103950346}]}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 3.093774103950346}], 
         Offset[{-1.5, 0}, {4., 3.093774103950346}]}]}, {
       LineBox[{{5., 3.660104499815529}, {5., 3.360104499815529}}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 3.660104499815529}], 
         Offset[{-1.5, 0}, {5., 3.660104499815529}]}], 
       LineBox[{
        Offset[{1.5, 0}, {5., 3.360104499815529}], 
         Offset[{-1.5, 0}, {5., 3.360104499815529}]}]}, {
       LineBox[{{6., 3.404775189313747}, {6., 3.0607751893137465`}}], 
       LineBox[{
        Offset[{1.5, 0}, {6., 3.404775189313747}], 
         Offset[{-1.5, 0}, {6., 3.404775189313747}]}], 
       LineBox[{
        Offset[{1.5, 0}, {6., 3.0607751893137465`}], 
         Offset[{-1.5, 0}, {6., 3.0607751893137465`}]}]}, {
       LineBox[{{7., 3.4196923161754316`}, {7., 3.0236923161754317`}}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 3.4196923161754316`}], 
         Offset[{-1.5, 0}, {7., 3.4196923161754316`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7., 3.0236923161754317`}], 
         Offset[{-1.5, 0}, {7., 3.0236923161754317`}]}]}, {
       LineBox[{{8., 3.5403415194069163`}, {8., 3.084341519406916}}], 
       LineBox[{
        Offset[{1.5, 0}, {8., 3.5403415194069163`}], 
         Offset[{-1.5, 0}, {8., 3.5403415194069163`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {8., 3.084341519406916}], 
         Offset[{-1.5, 0}, {8., 3.084341519406916}]}]}, {
       LineBox[{{9., 3.530601349380937}, {9., 3.006601349380937}}], 
       LineBox[{
        Offset[{1.5, 0}, {9., 3.530601349380937}], 
         Offset[{-1.5, 0}, {9., 3.530601349380937}]}], 
       LineBox[{
        Offset[{1.5, 0}, {9., 3.006601349380937}], 
         Offset[{-1.5, 0}, {9., 3.006601349380937}]}]}, {
       LineBox[{{10., 4.200140047297829}, {10., 3.6001400472978293`}}], 
       LineBox[{
        Offset[{1.5, 0}, {10., 4.200140047297829}], 
         Offset[{-1.5, 0}, {10., 4.200140047297829}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10., 3.6001400472978293`}], 
         Offset[{-1.5, 0}, {10., 3.6001400472978293`}]}]}, {
       LineBox[{{11., 3.5606083766397987`}, {11., 2.8766083766397985`}}], 
       LineBox[{
        Offset[{1.5, 0}, {11., 3.5606083766397987`}], 
         Offset[{-1.5, 0}, {11., 3.5606083766397987`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11., 2.8766083766397985`}], 
         Offset[{-1.5, 0}, {11., 2.8766083766397985`}]}]}, {
       LineBox[{{12., 3.668473560465557}, {12., 2.8924735604655574`}}], 
       LineBox[{
        Offset[{1.5, 0}, {12., 3.668473560465557}], 
         Offset[{-1.5, 0}, {12., 3.668473560465557}]}], 
       LineBox[{
        Offset[{1.5, 0}, {12., 2.8924735604655574`}], 
         Offset[{-1.5, 0}, {12., 2.8924735604655574`}]}]}, {
       LineBox[{{13., 2.903224537704217}, {13., 2.0272245377042166`}}], 
       LineBox[{
        Offset[{1.5, 0}, {13., 2.903224537704217}], 
         Offset[{-1.5, 0}, {13., 2.903224537704217}]}], 
       LineBox[{
        Offset[{1.5, 0}, {13., 2.0272245377042166`}], 
         Offset[{-1.5, 0}, {13., 2.0272245377042166`}]}]}, {
       LineBox[{{14., 4.4017514696648465`}, {14., 3.417751469664847}}], 
       LineBox[{
        Offset[{1.5, 0}, {14., 4.4017514696648465`}], 
         Offset[{-1.5, 0}, {14., 4.4017514696648465`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {14., 3.417751469664847}], 
         Offset[{-1.5, 0}, {14., 3.417751469664847}]}]}, {
       LineBox[{{15., 4.275469993106606}, {15., 3.1754699931066064`}}], 
       LineBox[{
        Offset[{1.5, 0}, {15., 4.275469993106606}], 
         Offset[{-1.5, 0}, {15., 4.275469993106606}]}], 
       LineBox[{
        Offset[{1.5, 0}, {15., 3.1754699931066064`}], 
         Offset[{-1.5, 0}, {15., 3.1754699931066064`}]}]}, {
       LineBox[{{16., 3.753630242124961}, {16., 2.529630242124961}}], 
       LineBox[{
        Offset[{1.5, 0}, {16., 3.753630242124961}], 
         Offset[{-1.5, 0}, {16., 3.753630242124961}]}], 
       LineBox[{
        Offset[{1.5, 0}, {16., 2.529630242124961}], 
         Offset[{-1.5, 0}, {16., 2.529630242124961}]}]}, {
       LineBox[{{17., 4.530896350455578}, {17., 3.1748963504555783`}}], 
       LineBox[{
        Offset[{1.5, 0}, {17., 4.530896350455578}], 
         Offset[{-1.5, 0}, {17., 4.530896350455578}]}], 
       LineBox[{
        Offset[{1.5, 0}, {17., 3.1748963504555783`}], 
         Offset[{-1.5, 0}, {17., 3.1748963504555783`}]}]}, {
       LineBox[{{18., 7.411664824870566}, {18., 5.915664824870565}}], 
       LineBox[{
        Offset[{1.5, 0}, {18., 7.411664824870566}], 
         Offset[{-1.5, 0}, {18., 7.411664824870566}]}], 
       LineBox[{
        Offset[{1.5, 0}, {18., 5.915664824870565}], 
         Offset[{-1.5, 0}, {18., 5.915664824870565}]}]}, {
       LineBox[{{19., 10.621322558436555`}, {19., 8.977322558436557}}], 
       LineBox[{
        Offset[{1.5, 0}, {19., 10.621322558436555`}], 
         Offset[{-1.5, 0}, {19., 10.621322558436555`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {19., 8.977322558436557}], 
         Offset[{-1.5, 0}, {19., 8.977322558436557}]}]}, {
       LineBox[{{20., 5.588113749318706}, {20., 3.7881137493187054`}}], 
       LineBox[{
        Offset[{1.5, 0}, {20., 5.588113749318706}], 
         Offset[{-1.5, 0}, {20., 5.588113749318706}]}], 
       LineBox[{
        Offset[{1.5, 0}, {20., 3.7881137493187054`}], 
         Offset[{-1.5, 0}, {20., 3.7881137493187054`}]}]}, {
       LineBox[{{21., 5.251939961498777}, {21., 3.2879399614987763`}}], 
       LineBox[{
        Offset[{1.5, 0}, {21., 5.251939961498777}], 
         Offset[{-1.5, 0}, {21., 5.251939961498777}]}], 
       LineBox[{
        Offset[{1.5, 0}, {21., 3.2879399614987763`}], 
         Offset[{-1.5, 0}, {21., 3.2879399614987763`}]}]}, {
       LineBox[{{22., 4.615326445630593}, {22., 2.4793264456305932`}}], 
       LineBox[{
        Offset[{1.5, 0}, {22., 4.615326445630593}], 
         Offset[{-1.5, 0}, {22., 4.615326445630593}]}], 
       LineBox[{
        Offset[{1.5, 0}, {22., 2.4793264456305932`}], 
         Offset[{-1.5, 0}, {22., 2.4793264456305932`}]}]}, {
       LineBox[{{23., 3.146055248555829}, {23., 0.8300552485558286}}], 
       LineBox[{
        Offset[{1.5, 0}, {23., 3.146055248555829}], 
         Offset[{-1.5, 0}, {23., 3.146055248555829}]}], 
       LineBox[{
        Offset[{1.5, 0}, {23., 0.8300552485558286}], 
         Offset[{-1.5, 0}, {23., 0.8300552485558286}]}]}, {
       LineBox[{{24., 3.5342511898108393`}, {24., 1.0302511898108395`}}], 
       LineBox[{
        Offset[{1.5, 0}, {24., 3.5342511898108393`}], 
         Offset[{-1.5, 0}, {24., 3.5342511898108393`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {24., 1.0302511898108395`}], 
         Offset[{-1.5, 0}, {24., 1.0302511898108395`}]}]}, {
       LineBox[{{25., 5.083089792677482}, {25., 2.3830897926774814`}}], 
       LineBox[{
        Offset[{1.5, 0}, {25., 5.083089792677482}], 
         Offset[{-1.5, 0}, {25., 5.083089792677482}]}], 
       LineBox[{
        Offset[{1.5, 0}, {25., 2.3830897926774814`}], 
         Offset[{-1.5, 0}, {25., 2.3830897926774814`}]}]}, {
       LineBox[{{26., 6.5999072365122355`}, {26., 3.6959072365122356`}}], 
       LineBox[{
        Offset[{1.5, 0}, {26., 6.5999072365122355`}], 
         Offset[{-1.5, 0}, {26., 6.5999072365122355`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {26., 3.6959072365122356`}], 
         Offset[{-1.5, 0}, {26., 3.6959072365122356`}]}]}, {
       LineBox[{{27., 3.600684117245801}, {27., 0.48468411724580096`}}], 
       LineBox[{
        Offset[{1.5, 0}, {27., 3.600684117245801}], 
         Offset[{-1.5, 0}, {27., 3.600684117245801}]}], 
       LineBox[{
        Offset[{1.5, 0}, {27., 0.48468411724580096`}], 
         Offset[{-1.5, 0}, {27., 0.48468411724580096`}]}]}, {
       LineBox[{{28., 4.196393061664319}, {28., 0.8603930616643183}}], 
       LineBox[{
        Offset[{1.5, 0}, {28., 4.196393061664319}], 
         Offset[{-1.5, 0}, {28., 4.196393061664319}]}], 
       LineBox[{
        Offset[{1.5, 0}, {28., 0.8603930616643183}], 
         Offset[{-1.5, 0}, {28., 0.8603930616643183}]}]}, {
       LineBox[{{29., 5.109933602601889}, {29., 1.545933602601889}}], 
       LineBox[{
        Offset[{1.5, 0}, {29., 5.109933602601889}], 
         Offset[{-1.5, 0}, {29., 5.109933602601889}]}], 
       LineBox[{
        Offset[{1.5, 0}, {29., 1.545933602601889}], 
         Offset[{-1.5, 0}, {29., 1.545933602601889}]}]}, {
       LineBox[{{30., 5.57087526680357}, {30., 1.7708752668035703`}}], 
       LineBox[{
        Offset[{1.5, 0}, {30., 5.57087526680357}], 
         Offset[{-1.5, 0}, {30., 5.57087526680357}]}], 
       LineBox[{
        Offset[{1.5, 0}, {30., 1.7708752668035703`}], 
         Offset[{-1.5, 0}, {30., 1.7708752668035703`}]}]}}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.546875, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 30.}, {0, 9.799322558436556}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692741128390904*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"OK", ",", " ", 
    RowBox[{
    "I", " ", "generally", " ", "expect", " ", "this", " ", "data", " ", "to",
      " ", "look", " ", "like", " ", "the", " ", "following", " ", 
     RowBox[{"function", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dumbidea", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"a", " ", "+", "  ", 
       RowBox[{"b", "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "c"}], ")"}], "/", "d"}], ")"}], "^", 
            "2"}]}], ")"}]}]}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"but", " ", 
      RowBox[{"that", "'"}], "s", " ", "not", " ", 
      RowBox[{"plottable", ".", "  ", "You"}], " ", 
      RowBox[{"can", "'"}], "t", " ", "plot", " ", "variables"}], ",", " ", 
     RowBox[{
     "and", " ", "in", " ", "the", " ", "above", " ", "equation", " ", "a"}], 
     ",", "b", ",", "c", ",", "d", ",", " ", 
     RowBox[{"are", " ", "just", " ", 
      RowBox[{"variables", ".", "   ", "You"}], " ", "can", " ", "only", " ", 
      "plot", " ", "them", " ", "if", " ", "everything", " ", "is", " ", 
      RowBox[{"numeric", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"guessedLinePlot", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"1.0", " ", "+", "  ", 
       RowBox[{"3.0", "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "4.0"}], ")"}], "/", "5.0"}], ")"}], "^", 
            "2"}]}], ")"}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"that", "'"}], "s", " ", "obviously", " ", "not", " ", "QUITE", 
      " ", "the", " ", "right", " ", "function"}], ",", " ", 
     RowBox[{
     "because", " ", "the", " ", "\"\<true\>\"", " ", "values", " ", "of", 
      " ", "the", " ", "parameters", " ", "are", " ", "not", " ", "1"}], ",", 
     "2", ",", "3", ",", "4", ",", 
     RowBox[{"5.", "  ", "Therefore"}], ",", " ", 
     RowBox[{
     "this", " ", "attempt", " ", "at", " ", "the", " ", "function", " ", 
      "did", " ", "NOT", " ", "give", " ", "me", " ", "a", " ", "function", 
      " ", "that", " ", "describes", " ", "where", " ", "the", " ", "data", 
      " ", 
      RowBox[{"is", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"myListPlot", ",", "guessedLinePlot"}], "]"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"In", " ", "principle"}], ",", " ", 
     RowBox[{
      RowBox[{
      "one", " ", "thing", " ", "you", " ", "could", " ", "do", " ", "is", 
       " ", "KEEP", " ", 
       RowBox[{"GUESSING", ".", "   ", "Improve"}], " ", "your", " ", 
       RowBox[{"guesses", "--"}]}], "-", 
      RowBox[{"for", " ", "example"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "make", " ", "the", " ", "Gaussian", " ", "narrower", " ", "and", " ", 
       "move", " ", "its", " ", "center", " ", "to", " ", "the", " ", 
       RowBox[{"right", "--"}]}], "-", 
      RowBox[{"until", " ", "you", " ", "find", " ", 
       RowBox[{"agreement", ".", "   ", 
        RowBox[{"That", "'"}]}], "s", " ", "a", " ", "perfectly", " ", "fine",
        " ", "thing", " ", "to", " ", "do"}]}], ",", " ", 
     RowBox[{"but", " ", 
      RowBox[{"tedious", "."}]}]}], " ", "*)"}], " ", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.537640837305359*^9, 3.5376408627626543`*^9}, {
  3.537641011922636*^9, 3.537641193464082*^9}, {3.537641241693853*^9, 
  3.537641245140994*^9}, {3.537641289210332*^9, 3.537641335930464*^9}, {
  3.5376415041366377`*^9, 3.53764151735925*^9}, {3.537645779613453*^9, 
  3.537645780594164*^9}, {3.692741171922947*^9, 3.692741198053418*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{1, 30}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692741159906124*^9, 3.6927412004641247`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 1.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{1, 30}, {1.0000000000054174`, 3.999999047793716}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692741159906124*^9, 3.69274120052954*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E2P7RWu/sPlABVwyFdW0dj9DMbncMgQePOt
wJYbyhdweM7gtjzpHCeUL+LgzsC0eqMID5Qv4XA6kdt25x2YvIzDjd9/57Ed
g/EVHFg9JV6uqYeZr+QQwHqrTEINxldxyNrGvqDGmB/KV3PoTV20f+t+mH4N
hzd7eN5k2MHUazkwPildcnwHM5Sv45A/zfe4tjtMv56D3y8Ts8NneaF8AweG
zABOfiWYeYYOv9ckBO2+xAflGzkU+FQemL5cCso3dvB/mHfOYaYylG/icJmR
9cmCA0JQvqmDnaiWSraIIJRv5qB9kHHDmwRYeJg7XGU2ZhU+/98ewrdw4Pia
/ZLHiQkqb+ngtyxFL+4uzH1WDmuWzvtXMl0Eyrd2eMZhezQrnAHKt3FY5GCl
ombFAuXbOjBVCS+fPR8WHnYOF9+J3Pocy+sAAFAbbVc=
       
       "]], {{LineBox[{{1., 3.4752816259660246`}, {1., 3.271281625966025}}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.4752816259660246`}], 
          Offset[{-1.5, 0}, {1., 3.4752816259660246`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.271281625966025}], 
          Offset[{-1.5, 0}, {1., 3.271281625966025}]}]}, {
        LineBox[{{2., 3.470661660769326}, {2., 3.254661660769326}}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.470661660769326}], 
          Offset[{-1.5, 0}, {2., 3.470661660769326}]}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.254661660769326}], 
          Offset[{-1.5, 0}, {2., 3.254661660769326}]}]}, {
        LineBox[{{3., 3.523000619010071}, {3., 3.287000619010071}}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.523000619010071}], 
          Offset[{-1.5, 0}, {3., 3.523000619010071}]}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.287000619010071}], 
          Offset[{-1.5, 0}, {3., 3.287000619010071}]}]}, {
        LineBox[{{4., 3.357774103950346}, {4., 3.093774103950346}}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.357774103950346}], 
          Offset[{-1.5, 0}, {4., 3.357774103950346}]}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.093774103950346}], 
          Offset[{-1.5, 0}, {4., 3.093774103950346}]}]}, {
        LineBox[{{5., 3.660104499815529}, {5., 3.360104499815529}}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.660104499815529}], 
          Offset[{-1.5, 0}, {5., 3.660104499815529}]}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.360104499815529}], 
          Offset[{-1.5, 0}, {5., 3.360104499815529}]}]}, {
        LineBox[{{6., 3.404775189313747}, {6., 3.0607751893137465`}}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.404775189313747}], 
          Offset[{-1.5, 0}, {6., 3.404775189313747}]}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.0607751893137465`}], 
          Offset[{-1.5, 0}, {6., 3.0607751893137465`}]}]}, {
        LineBox[{{7., 3.4196923161754316`}, {7., 3.0236923161754317`}}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.4196923161754316`}], 
          Offset[{-1.5, 0}, {7., 3.4196923161754316`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.0236923161754317`}], 
          Offset[{-1.5, 0}, {7., 3.0236923161754317`}]}]}, {
        LineBox[{{8., 3.5403415194069163`}, {8., 3.084341519406916}}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.5403415194069163`}], 
          Offset[{-1.5, 0}, {8., 3.5403415194069163`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.084341519406916}], 
          Offset[{-1.5, 0}, {8., 3.084341519406916}]}]}, {
        LineBox[{{9., 3.530601349380937}, {9., 3.006601349380937}}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.530601349380937}], 
          Offset[{-1.5, 0}, {9., 3.530601349380937}]}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.006601349380937}], 
          Offset[{-1.5, 0}, {9., 3.006601349380937}]}]}, {
        LineBox[{{10., 4.200140047297829}, {10., 3.6001400472978293`}}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 4.200140047297829}], 
          Offset[{-1.5, 0}, {10., 4.200140047297829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 3.6001400472978293`}], 
          Offset[{-1.5, 0}, {10., 3.6001400472978293`}]}]}, {
        LineBox[{{11., 3.5606083766397987`}, {11., 2.8766083766397985`}}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 3.5606083766397987`}], 
          Offset[{-1.5, 0}, {11., 3.5606083766397987`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 2.8766083766397985`}], 
          Offset[{-1.5, 0}, {11., 2.8766083766397985`}]}]}, {
        LineBox[{{12., 3.668473560465557}, {12., 2.8924735604655574`}}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 3.668473560465557}], 
          Offset[{-1.5, 0}, {12., 3.668473560465557}]}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 2.8924735604655574`}], 
          Offset[{-1.5, 0}, {12., 2.8924735604655574`}]}]}, {
        LineBox[{{13., 2.903224537704217}, {13., 2.0272245377042166`}}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.903224537704217}], 
          Offset[{-1.5, 0}, {13., 2.903224537704217}]}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.0272245377042166`}], 
          Offset[{-1.5, 0}, {13., 2.0272245377042166`}]}]}, {
        LineBox[{{14., 4.4017514696648465`}, {14., 3.417751469664847}}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 4.4017514696648465`}], 
          Offset[{-1.5, 0}, {14., 4.4017514696648465`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 3.417751469664847}], 
          Offset[{-1.5, 0}, {14., 3.417751469664847}]}]}, {
        LineBox[{{15., 4.275469993106606}, {15., 3.1754699931066064`}}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 4.275469993106606}], 
          Offset[{-1.5, 0}, {15., 4.275469993106606}]}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 3.1754699931066064`}], 
          Offset[{-1.5, 0}, {15., 3.1754699931066064`}]}]}, {
        LineBox[{{16., 3.753630242124961}, {16., 2.529630242124961}}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 3.753630242124961}], 
          Offset[{-1.5, 0}, {16., 3.753630242124961}]}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 2.529630242124961}], 
          Offset[{-1.5, 0}, {16., 2.529630242124961}]}]}, {
        LineBox[{{17., 4.530896350455578}, {17., 3.1748963504555783`}}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 4.530896350455578}], 
          Offset[{-1.5, 0}, {17., 4.530896350455578}]}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 3.1748963504555783`}], 
          Offset[{-1.5, 0}, {17., 3.1748963504555783`}]}]}, {
        LineBox[{{18., 7.411664824870566}, {18., 5.915664824870565}}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 7.411664824870566}], 
          Offset[{-1.5, 0}, {18., 7.411664824870566}]}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 5.915664824870565}], 
          Offset[{-1.5, 0}, {18., 5.915664824870565}]}]}, {
        LineBox[{{19., 10.621322558436555`}, {19., 8.977322558436557}}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 10.621322558436555`}], 
          Offset[{-1.5, 0}, {19., 10.621322558436555`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 8.977322558436557}], 
          Offset[{-1.5, 0}, {19., 8.977322558436557}]}]}, {
        LineBox[{{20., 5.588113749318706}, {20., 3.7881137493187054`}}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 5.588113749318706}], 
          Offset[{-1.5, 0}, {20., 5.588113749318706}]}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 3.7881137493187054`}], 
          Offset[{-1.5, 0}, {20., 3.7881137493187054`}]}]}, {
        LineBox[{{21., 5.251939961498777}, {21., 3.2879399614987763`}}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 5.251939961498777}], 
          Offset[{-1.5, 0}, {21., 5.251939961498777}]}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 3.2879399614987763`}], 
          Offset[{-1.5, 0}, {21., 3.2879399614987763`}]}]}, {
        LineBox[{{22., 4.615326445630593}, {22., 2.4793264456305932`}}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 4.615326445630593}], 
          Offset[{-1.5, 0}, {22., 4.615326445630593}]}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 2.4793264456305932`}], 
          Offset[{-1.5, 0}, {22., 2.4793264456305932`}]}]}, {
        LineBox[{{23., 3.146055248555829}, {23., 0.8300552485558286}}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 3.146055248555829}], 
          Offset[{-1.5, 0}, {23., 3.146055248555829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 0.8300552485558286}], 
          Offset[{-1.5, 0}, {23., 0.8300552485558286}]}]}, {
        LineBox[{{24., 3.5342511898108393`}, {24., 1.0302511898108395`}}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 3.5342511898108393`}], 
          Offset[{-1.5, 0}, {24., 3.5342511898108393`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 1.0302511898108395`}], 
          Offset[{-1.5, 0}, {24., 1.0302511898108395`}]}]}, {
        LineBox[{{25., 5.083089792677482}, {25., 2.3830897926774814`}}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 5.083089792677482}], 
          Offset[{-1.5, 0}, {25., 5.083089792677482}]}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 2.3830897926774814`}], 
          Offset[{-1.5, 0}, {25., 2.3830897926774814`}]}]}, {
        LineBox[{{26., 6.5999072365122355`}, {26., 3.6959072365122356`}}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 6.5999072365122355`}], 
          Offset[{-1.5, 0}, {26., 6.5999072365122355`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 3.6959072365122356`}], 
          Offset[{-1.5, 0}, {26., 3.6959072365122356`}]}]}, {
        LineBox[{{27., 3.600684117245801}, {27., 0.48468411724580096`}}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 3.600684117245801}], 
          Offset[{-1.5, 0}, {27., 3.600684117245801}]}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 0.48468411724580096`}], 
          Offset[{-1.5, 0}, {27., 0.48468411724580096`}]}]}, {
        LineBox[{{28., 4.196393061664319}, {28., 0.8603930616643183}}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 4.196393061664319}], 
          Offset[{-1.5, 0}, {28., 4.196393061664319}]}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 0.8603930616643183}], 
          Offset[{-1.5, 0}, {28., 0.8603930616643183}]}]}, {
        LineBox[{{29., 5.109933602601889}, {29., 1.545933602601889}}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 5.109933602601889}], 
          Offset[{-1.5, 0}, {29., 5.109933602601889}]}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 1.545933602601889}], 
          Offset[{-1.5, 0}, {29., 1.545933602601889}]}]}, {
        LineBox[{{30., 5.57087526680357}, {30., 1.7708752668035703`}}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 5.57087526680357}], 
          Offset[{-1.5, 0}, {30., 5.57087526680357}]}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 1.7708752668035703`}], 
          Offset[{-1.5, 0}, {30., 
           1.7708752668035703`}]}]}}}, {}}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.546875, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 30.}, {0, 9.799322558436556}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692741159906124*^9, 3.69274120054963*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "\"\<Fit\>\"", " ", "functions", " ", "are", " ", "built", " ", "to", 
       " ", "automate", " ", "the", " ", "trial"}], "-", "and", "-", 
      RowBox[{"error", " ", "process", " ", "of", " ", "trying"}], "-", "and",
       "-", 
      RowBox[{"retrying", " ", "these", " ", 
       RowBox[{"functions", ".", "    ", "The"}], " ", "simple", " ", 
       "function", " ", "\"\<Fit\>\"", " ", "or"}]}], " ", "|", 
     RowBox[{
     "\"\<FindFit\>\"", " ", "is", " ", "easy", " ", "to", " ", "use"}]}], 
    ",", " ", 
    RowBox[{
    "but", " ", "it", " ", "only", " ", "works", " ", "with", "  ", "*", 
     RowBox[{"multipliers", "."}], "*", "   ", "It", " ", 
     RowBox[{"can", "'"}], "t", " ", "find", " ", "parameters", " ", "that", 
     " ", "go", " ", "into", " ", "exponents"}], ",", " ", 
    RowBox[{"or", " ", "trig", " ", "functions"}], ",", " ", 
    RowBox[{"or", " ", 
     RowBox[{"whatever", ".", "  ", "You"}], " ", "give", " ", "it", " ", "a",
      " ", "list", " ", "of", " ", "terms"}], ",", " ", 
    RowBox[{
    "it", " ", "figures", " ", "how", " ", "to", " ", "add", " ", "them", " ", 
     RowBox[{"together", "."}]}]}], "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"myDumbFit", "=", " ", 
    RowBox[{"Fit", "[", 
     RowBox[{"datalist", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "4.0"}], ")"}], "/", "5.0"}], ")"}], "^", 
            "2"}]}], ")"}]}]}], "}"}], ",", "x"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"myListPlot", ",", 
     RowBox[{"Plot", "[", 
      RowBox[{"myDumbFit", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Notice", " ", "that", " ", "it", " ", "made", " ", "a", " ", "pretty", 
       " ", "good", " ", "guess", " ", "at", " ", "the", " ", "constant"}], 
      "-", "offset"}], ",", " ", 
     RowBox[{
     "but", " ", "it", " ", "had", " ", "no", " ", "way", " ", "to", " ", 
      "manipulate", " ", "the", " ", "width", " ", "or", " ", "position", " ",
       "of", " ", "the", " ", 
      RowBox[{"bump", ".", "  ", "In"}], " ", "this", " ", "case", " ", "it", 
      " ", "actually", " ", "gave", " ", "us", " ", "a", " ", "negative", " ", 
      RowBox[{"bump", "."}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.5376412515061407`*^9, 3.5376412850469837`*^9}, {
   3.537641339527184*^9, 3.537641467952217*^9}, {3.537641529414386*^9, 
   3.537641707928784*^9}, {3.5376427206922283`*^9, 3.537642748977992*^9}, 
   3.53764586003926*^9}],

Cell[BoxData[
 RowBox[{"3.872080354893509`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.6808116493116382`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.04000000000000001`"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4.`"}], "+", "x"}], ")"}], "2"]}]]}]}]], "Output",
 CellChangeTimes->{3.6927412161668777`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E2P7RWu/sPlABVwyFdW0dj9DMbncMgQePOt
wJYbyhdweM7gtjzpHCeUL+LgzsC0eqMID5Qv4XA6kdt25x2YvIzDjd9/57Ed
g/EVHFg9JV6uqYeZr+QQwHqrTEINxldxyNrGvqDGmB/KV3PoTV20f+t+mH4N
hzd7eN5k2MHUazkwPildcnwHM5Sv45A/zfe4tjtMv56D3y8Ts8NneaF8AweG
zABOfiWYeYYOv9ckBO2+xAflGzkU+FQemL5cCso3dvB/mHfOYaYylG/icJmR
9cmCA0JQvqmDnaiWSraIIJRv5qB9kHHDmwRYeJg7XGU2ZhU+/98ewrdw4Pia
/ZLHiQkqb+ngtyxFL+4uzH1WDmuWzvtXMl0Eyrd2eMZhezQrnAHKt3FY5GCl
ombFAuXbOjBVCS+fPR8WHnYOF9+J3Pocy+sAAFAbbVc=
       
       "]], {{LineBox[{{1., 3.4752816259660246`}, {1., 3.271281625966025}}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.4752816259660246`}], 
          Offset[{-1.5, 0}, {1., 3.4752816259660246`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.271281625966025}], 
          Offset[{-1.5, 0}, {1., 3.271281625966025}]}]}, {
        LineBox[{{2., 3.470661660769326}, {2., 3.254661660769326}}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.470661660769326}], 
          Offset[{-1.5, 0}, {2., 3.470661660769326}]}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.254661660769326}], 
          Offset[{-1.5, 0}, {2., 3.254661660769326}]}]}, {
        LineBox[{{3., 3.523000619010071}, {3., 3.287000619010071}}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.523000619010071}], 
          Offset[{-1.5, 0}, {3., 3.523000619010071}]}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.287000619010071}], 
          Offset[{-1.5, 0}, {3., 3.287000619010071}]}]}, {
        LineBox[{{4., 3.357774103950346}, {4., 3.093774103950346}}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.357774103950346}], 
          Offset[{-1.5, 0}, {4., 3.357774103950346}]}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.093774103950346}], 
          Offset[{-1.5, 0}, {4., 3.093774103950346}]}]}, {
        LineBox[{{5., 3.660104499815529}, {5., 3.360104499815529}}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.660104499815529}], 
          Offset[{-1.5, 0}, {5., 3.660104499815529}]}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.360104499815529}], 
          Offset[{-1.5, 0}, {5., 3.360104499815529}]}]}, {
        LineBox[{{6., 3.404775189313747}, {6., 3.0607751893137465`}}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.404775189313747}], 
          Offset[{-1.5, 0}, {6., 3.404775189313747}]}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.0607751893137465`}], 
          Offset[{-1.5, 0}, {6., 3.0607751893137465`}]}]}, {
        LineBox[{{7., 3.4196923161754316`}, {7., 3.0236923161754317`}}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.4196923161754316`}], 
          Offset[{-1.5, 0}, {7., 3.4196923161754316`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.0236923161754317`}], 
          Offset[{-1.5, 0}, {7., 3.0236923161754317`}]}]}, {
        LineBox[{{8., 3.5403415194069163`}, {8., 3.084341519406916}}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.5403415194069163`}], 
          Offset[{-1.5, 0}, {8., 3.5403415194069163`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.084341519406916}], 
          Offset[{-1.5, 0}, {8., 3.084341519406916}]}]}, {
        LineBox[{{9., 3.530601349380937}, {9., 3.006601349380937}}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.530601349380937}], 
          Offset[{-1.5, 0}, {9., 3.530601349380937}]}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.006601349380937}], 
          Offset[{-1.5, 0}, {9., 3.006601349380937}]}]}, {
        LineBox[{{10., 4.200140047297829}, {10., 3.6001400472978293`}}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 4.200140047297829}], 
          Offset[{-1.5, 0}, {10., 4.200140047297829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 3.6001400472978293`}], 
          Offset[{-1.5, 0}, {10., 3.6001400472978293`}]}]}, {
        LineBox[{{11., 3.5606083766397987`}, {11., 2.8766083766397985`}}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 3.5606083766397987`}], 
          Offset[{-1.5, 0}, {11., 3.5606083766397987`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 2.8766083766397985`}], 
          Offset[{-1.5, 0}, {11., 2.8766083766397985`}]}]}, {
        LineBox[{{12., 3.668473560465557}, {12., 2.8924735604655574`}}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 3.668473560465557}], 
          Offset[{-1.5, 0}, {12., 3.668473560465557}]}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 2.8924735604655574`}], 
          Offset[{-1.5, 0}, {12., 2.8924735604655574`}]}]}, {
        LineBox[{{13., 2.903224537704217}, {13., 2.0272245377042166`}}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.903224537704217}], 
          Offset[{-1.5, 0}, {13., 2.903224537704217}]}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.0272245377042166`}], 
          Offset[{-1.5, 0}, {13., 2.0272245377042166`}]}]}, {
        LineBox[{{14., 4.4017514696648465`}, {14., 3.417751469664847}}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 4.4017514696648465`}], 
          Offset[{-1.5, 0}, {14., 4.4017514696648465`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 3.417751469664847}], 
          Offset[{-1.5, 0}, {14., 3.417751469664847}]}]}, {
        LineBox[{{15., 4.275469993106606}, {15., 3.1754699931066064`}}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 4.275469993106606}], 
          Offset[{-1.5, 0}, {15., 4.275469993106606}]}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 3.1754699931066064`}], 
          Offset[{-1.5, 0}, {15., 3.1754699931066064`}]}]}, {
        LineBox[{{16., 3.753630242124961}, {16., 2.529630242124961}}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 3.753630242124961}], 
          Offset[{-1.5, 0}, {16., 3.753630242124961}]}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 2.529630242124961}], 
          Offset[{-1.5, 0}, {16., 2.529630242124961}]}]}, {
        LineBox[{{17., 4.530896350455578}, {17., 3.1748963504555783`}}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 4.530896350455578}], 
          Offset[{-1.5, 0}, {17., 4.530896350455578}]}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 3.1748963504555783`}], 
          Offset[{-1.5, 0}, {17., 3.1748963504555783`}]}]}, {
        LineBox[{{18., 7.411664824870566}, {18., 5.915664824870565}}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 7.411664824870566}], 
          Offset[{-1.5, 0}, {18., 7.411664824870566}]}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 5.915664824870565}], 
          Offset[{-1.5, 0}, {18., 5.915664824870565}]}]}, {
        LineBox[{{19., 10.621322558436555`}, {19., 8.977322558436557}}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 10.621322558436555`}], 
          Offset[{-1.5, 0}, {19., 10.621322558436555`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 8.977322558436557}], 
          Offset[{-1.5, 0}, {19., 8.977322558436557}]}]}, {
        LineBox[{{20., 5.588113749318706}, {20., 3.7881137493187054`}}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 5.588113749318706}], 
          Offset[{-1.5, 0}, {20., 5.588113749318706}]}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 3.7881137493187054`}], 
          Offset[{-1.5, 0}, {20., 3.7881137493187054`}]}]}, {
        LineBox[{{21., 5.251939961498777}, {21., 3.2879399614987763`}}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 5.251939961498777}], 
          Offset[{-1.5, 0}, {21., 5.251939961498777}]}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 3.2879399614987763`}], 
          Offset[{-1.5, 0}, {21., 3.2879399614987763`}]}]}, {
        LineBox[{{22., 4.615326445630593}, {22., 2.4793264456305932`}}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 4.615326445630593}], 
          Offset[{-1.5, 0}, {22., 4.615326445630593}]}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 2.4793264456305932`}], 
          Offset[{-1.5, 0}, {22., 2.4793264456305932`}]}]}, {
        LineBox[{{23., 3.146055248555829}, {23., 0.8300552485558286}}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 3.146055248555829}], 
          Offset[{-1.5, 0}, {23., 3.146055248555829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 0.8300552485558286}], 
          Offset[{-1.5, 0}, {23., 0.8300552485558286}]}]}, {
        LineBox[{{24., 3.5342511898108393`}, {24., 1.0302511898108395`}}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 3.5342511898108393`}], 
          Offset[{-1.5, 0}, {24., 3.5342511898108393`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 1.0302511898108395`}], 
          Offset[{-1.5, 0}, {24., 1.0302511898108395`}]}]}, {
        LineBox[{{25., 5.083089792677482}, {25., 2.3830897926774814`}}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 5.083089792677482}], 
          Offset[{-1.5, 0}, {25., 5.083089792677482}]}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 2.3830897926774814`}], 
          Offset[{-1.5, 0}, {25., 2.3830897926774814`}]}]}, {
        LineBox[{{26., 6.5999072365122355`}, {26., 3.6959072365122356`}}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 6.5999072365122355`}], 
          Offset[{-1.5, 0}, {26., 6.5999072365122355`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 3.6959072365122356`}], 
          Offset[{-1.5, 0}, {26., 3.6959072365122356`}]}]}, {
        LineBox[{{27., 3.600684117245801}, {27., 0.48468411724580096`}}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 3.600684117245801}], 
          Offset[{-1.5, 0}, {27., 3.600684117245801}]}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 0.48468411724580096`}], 
          Offset[{-1.5, 0}, {27., 0.48468411724580096`}]}]}, {
        LineBox[{{28., 4.196393061664319}, {28., 0.8603930616643183}}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 4.196393061664319}], 
          Offset[{-1.5, 0}, {28., 4.196393061664319}]}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 0.8603930616643183}], 
          Offset[{-1.5, 0}, {28., 0.8603930616643183}]}]}, {
        LineBox[{{29., 5.109933602601889}, {29., 1.545933602601889}}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 5.109933602601889}], 
          Offset[{-1.5, 0}, {29., 5.109933602601889}]}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 1.545933602601889}], 
          Offset[{-1.5, 0}, {29., 1.545933602601889}]}]}, {
        LineBox[{{30., 5.57087526680357}, {30., 1.7708752668035703`}}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 5.57087526680357}], 
          Offset[{-1.5, 0}, {30., 5.57087526680357}]}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 1.7708752668035703`}], 
          Offset[{-1.5, 0}, {30., 
           1.7708752668035703`}]}]}}}, {}}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.546875, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 30.}, {0, 9.799322558436556}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692741216238078*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "To", " ", "do", " ", "anything", " ", "else", " ", "we", " ", "need", 
     " ", "a", " ", "NONLINEAR", " ", "fit"}], ",", " ", 
    RowBox[{
    "with", " ", "the", " ", "power", " ", "to", " ", "manipulate", " ", 
     "any", " ", "parameter", " ", 
     RowBox[{"anywhere", "."}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"myNLM", " ", "=", " ", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{"datalist", ",", 
      RowBox[{"a", " ", "+", "  ", 
       RowBox[{"b", "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "c"}], ")"}], "/", "d"}], ")"}], "^", 
            "2"}]}], ")"}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "x"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"myNLMPlot", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"myNLM", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "30"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"myNLMPlot", ",", "myListPlot"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"myNLM", "[", "\"\<ParameterTable\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"amazing", "!"}], "  ", "It", " ", 
       RowBox[{"worked", ".", "   ", "Sometimes"}], " ", "it", " ", 
       RowBox[{"doesn", "'"}], "t", " ", 
       RowBox[{"work", " ", "--"}]}], "-", " ", 
      RowBox[{
      "a", " ", "common", " ", "problem", " ", "is", " ", "that", " ", "the", 
       " ", "automated", " ", "\"\<guesswork\>\"", " ", "process", " ", "has",
        " ", "to", " ", "start", " ", "somewhere"}]}], ",", " ", 
     RowBox[{"and", " ", "improve", " ", 
      RowBox[{"gradually", ".", "  ", 
       RowBox[{"(", 
        RowBox[{
        "The", " ", "default", " ", "is", " ", "to", " ", "start", " ", "ALL",
          " ", "of", " ", "the", " ", "parameters", " ", "at", " ", 
         RowBox[{"1.000", "."}]}], ")"}]}], "   ", "If", " ", "the", " ", 
      "first", " ", "few", " ", "guesses", " ", 
      RowBox[{"aren", "'"}], "t", " ", "going", " ", "in", " ", "the", " ", 
      "right", " ", "direction"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"it", " ", "gives", " ", "up"}], " ", "..."}], " ", 
      "sometimes", " ", "by", " ", "failing"}], ",", " ", 
     RowBox[{
      RowBox[{"sometimes", " ", "by", " ", "finding", " ", "a", " ", "god"}], 
      "-", 
      RowBox[{"awful", " ", "fit", " ", 
       RowBox[{"(", 
        RowBox[{
        "this", " ", "is", " ", "called", " ", 
         "\"\<getting stuck in a local minimum\>\""}], ")"}], " ", "Always", 
       " ", "plot", " ", "your", " ", "results", " ", "to", " ", "make", " ", 
       "sure", " ", "your", " ", "fit", " ", "is", " ", "reasonable"}]}]}], 
    "*)"}], "  "}]}]], "Input",
 CellChangeTimes->{{3.537641713174182*^9, 3.5376419792692747`*^9}, {
  3.537642762058394*^9, 3.537642855198353*^9}, {3.5376429064116783`*^9, 
  3.53764293039907*^9}, {3.5376429816645803`*^9, 3.5376429891260643`*^9}, {
  3.537643155580122*^9, 3.537643173722252*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"3.97701470366354`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.8050473474644311`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.025522889144434825`"}], " ", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 
      3.97701470366354, $CellContext`b -> -0.8050473474644311, $CellContext`c -> 
      6.696901162697048, $CellContext`d -> -6.259434264608004}, \
{{$CellContext`x}, $CellContext`a + $CellContext`b 
       E^(-$CellContext`d^(-2) (-$CellContext`c + $CellContext`x)^2)}}, {
    1}, {{1, 3.3732816259660248`}, {2, 3.362661660769326}, {
     3, 3.405000619010071}, {4, 3.225774103950346}, {5, 3.510104499815529}, {
     6, 3.2327751893137466`}, {7, 3.2216923161754316`}, {
     8, 3.312341519406916}, {9, 3.268601349380937}, {10, 3.900140047297829}, {
     11, 3.2186083766397986`}, {12, 3.2804735604655573`}, {
     13, 2.465224537704217}, {14, 3.909751469664847}, {
     15, 3.725469993106606}, {16, 3.141630242124961}, {
     17, 3.852896350455578}, {18, 6.663664824870565}, {
     19, 9.799322558436556}, {20, 4.688113749318705}, {
     21, 4.2699399614987765`}, {22, 3.5473264456305933`}, {
     23, 1.9880552485558287`}, {24, 2.2822511898108395`}, {
     25, 3.7330897926774815`}, {26, 5.147907236512236}, {
     27, 2.042684117245801}, {28, 2.5283930616643184`}, {
     29, 3.327933602601889}, {30, 3.6708752668035705`}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.692741225393524*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
15kwMH6mEPf/T7qZbw==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 3.2},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692741225501205*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
15kwMH6mEPf/T7qZbw==
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E2P7RWu/sPlABVwyFdW0dj9DMbncMgQePOt
wJYbyhdweM7gtjzpHCeUL+LgzsC0eqMID5Qv4XA6kdt25x2YvIzDjd9/57Ed
g/EVHFg9JV6uqYeZr+QQwHqrTEINxldxyNrGvqDGmB/KV3PoTV20f+t+mH4N
hzd7eN5k2MHUazkwPildcnwHM5Sv45A/zfe4tjtMv56D3y8Ts8NneaF8AweG
zABOfiWYeYYOv9ckBO2+xAflGzkU+FQemL5cCso3dvB/mHfOYaYylG/icJmR
9cmCA0JQvqmDnaiWSraIIJRv5qB9kHHDmwRYeJg7XGU2ZhU+/98ewrdw4Pia
/ZLHiQkqb+ngtyxFL+4uzH1WDmuWzvtXMl0Eyrd2eMZhezQrnAHKt3FY5GCl
ombFAuXbOjBVCS+fPR8WHnYOF9+J3Pocy+sAAFAbbVc=
       
       "]], {{LineBox[{{1., 3.4752816259660246`}, {1., 3.271281625966025}}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.4752816259660246`}], 
          Offset[{-1.5, 0}, {1., 3.4752816259660246`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.271281625966025}], 
          Offset[{-1.5, 0}, {1., 3.271281625966025}]}]}, {
        LineBox[{{2., 3.470661660769326}, {2., 3.254661660769326}}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.470661660769326}], 
          Offset[{-1.5, 0}, {2., 3.470661660769326}]}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.254661660769326}], 
          Offset[{-1.5, 0}, {2., 3.254661660769326}]}]}, {
        LineBox[{{3., 3.523000619010071}, {3., 3.287000619010071}}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.523000619010071}], 
          Offset[{-1.5, 0}, {3., 3.523000619010071}]}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.287000619010071}], 
          Offset[{-1.5, 0}, {3., 3.287000619010071}]}]}, {
        LineBox[{{4., 3.357774103950346}, {4., 3.093774103950346}}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.357774103950346}], 
          Offset[{-1.5, 0}, {4., 3.357774103950346}]}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.093774103950346}], 
          Offset[{-1.5, 0}, {4., 3.093774103950346}]}]}, {
        LineBox[{{5., 3.660104499815529}, {5., 3.360104499815529}}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.660104499815529}], 
          Offset[{-1.5, 0}, {5., 3.660104499815529}]}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.360104499815529}], 
          Offset[{-1.5, 0}, {5., 3.360104499815529}]}]}, {
        LineBox[{{6., 3.404775189313747}, {6., 3.0607751893137465`}}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.404775189313747}], 
          Offset[{-1.5, 0}, {6., 3.404775189313747}]}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.0607751893137465`}], 
          Offset[{-1.5, 0}, {6., 3.0607751893137465`}]}]}, {
        LineBox[{{7., 3.4196923161754316`}, {7., 3.0236923161754317`}}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.4196923161754316`}], 
          Offset[{-1.5, 0}, {7., 3.4196923161754316`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.0236923161754317`}], 
          Offset[{-1.5, 0}, {7., 3.0236923161754317`}]}]}, {
        LineBox[{{8., 3.5403415194069163`}, {8., 3.084341519406916}}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.5403415194069163`}], 
          Offset[{-1.5, 0}, {8., 3.5403415194069163`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.084341519406916}], 
          Offset[{-1.5, 0}, {8., 3.084341519406916}]}]}, {
        LineBox[{{9., 3.530601349380937}, {9., 3.006601349380937}}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.530601349380937}], 
          Offset[{-1.5, 0}, {9., 3.530601349380937}]}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.006601349380937}], 
          Offset[{-1.5, 0}, {9., 3.006601349380937}]}]}, {
        LineBox[{{10., 4.200140047297829}, {10., 3.6001400472978293`}}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 4.200140047297829}], 
          Offset[{-1.5, 0}, {10., 4.200140047297829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 3.6001400472978293`}], 
          Offset[{-1.5, 0}, {10., 3.6001400472978293`}]}]}, {
        LineBox[{{11., 3.5606083766397987`}, {11., 2.8766083766397985`}}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 3.5606083766397987`}], 
          Offset[{-1.5, 0}, {11., 3.5606083766397987`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 2.8766083766397985`}], 
          Offset[{-1.5, 0}, {11., 2.8766083766397985`}]}]}, {
        LineBox[{{12., 3.668473560465557}, {12., 2.8924735604655574`}}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 3.668473560465557}], 
          Offset[{-1.5, 0}, {12., 3.668473560465557}]}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 2.8924735604655574`}], 
          Offset[{-1.5, 0}, {12., 2.8924735604655574`}]}]}, {
        LineBox[{{13., 2.903224537704217}, {13., 2.0272245377042166`}}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.903224537704217}], 
          Offset[{-1.5, 0}, {13., 2.903224537704217}]}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.0272245377042166`}], 
          Offset[{-1.5, 0}, {13., 2.0272245377042166`}]}]}, {
        LineBox[{{14., 4.4017514696648465`}, {14., 3.417751469664847}}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 4.4017514696648465`}], 
          Offset[{-1.5, 0}, {14., 4.4017514696648465`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 3.417751469664847}], 
          Offset[{-1.5, 0}, {14., 3.417751469664847}]}]}, {
        LineBox[{{15., 4.275469993106606}, {15., 3.1754699931066064`}}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 4.275469993106606}], 
          Offset[{-1.5, 0}, {15., 4.275469993106606}]}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 3.1754699931066064`}], 
          Offset[{-1.5, 0}, {15., 3.1754699931066064`}]}]}, {
        LineBox[{{16., 3.753630242124961}, {16., 2.529630242124961}}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 3.753630242124961}], 
          Offset[{-1.5, 0}, {16., 3.753630242124961}]}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 2.529630242124961}], 
          Offset[{-1.5, 0}, {16., 2.529630242124961}]}]}, {
        LineBox[{{17., 4.530896350455578}, {17., 3.1748963504555783`}}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 4.530896350455578}], 
          Offset[{-1.5, 0}, {17., 4.530896350455578}]}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 3.1748963504555783`}], 
          Offset[{-1.5, 0}, {17., 3.1748963504555783`}]}]}, {
        LineBox[{{18., 7.411664824870566}, {18., 5.915664824870565}}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 7.411664824870566}], 
          Offset[{-1.5, 0}, {18., 7.411664824870566}]}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 5.915664824870565}], 
          Offset[{-1.5, 0}, {18., 5.915664824870565}]}]}, {
        LineBox[{{19., 10.621322558436555`}, {19., 8.977322558436557}}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 10.621322558436555`}], 
          Offset[{-1.5, 0}, {19., 10.621322558436555`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 8.977322558436557}], 
          Offset[{-1.5, 0}, {19., 8.977322558436557}]}]}, {
        LineBox[{{20., 5.588113749318706}, {20., 3.7881137493187054`}}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 5.588113749318706}], 
          Offset[{-1.5, 0}, {20., 5.588113749318706}]}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 3.7881137493187054`}], 
          Offset[{-1.5, 0}, {20., 3.7881137493187054`}]}]}, {
        LineBox[{{21., 5.251939961498777}, {21., 3.2879399614987763`}}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 5.251939961498777}], 
          Offset[{-1.5, 0}, {21., 5.251939961498777}]}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 3.2879399614987763`}], 
          Offset[{-1.5, 0}, {21., 3.2879399614987763`}]}]}, {
        LineBox[{{22., 4.615326445630593}, {22., 2.4793264456305932`}}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 4.615326445630593}], 
          Offset[{-1.5, 0}, {22., 4.615326445630593}]}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 2.4793264456305932`}], 
          Offset[{-1.5, 0}, {22., 2.4793264456305932`}]}]}, {
        LineBox[{{23., 3.146055248555829}, {23., 0.8300552485558286}}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 3.146055248555829}], 
          Offset[{-1.5, 0}, {23., 3.146055248555829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 0.8300552485558286}], 
          Offset[{-1.5, 0}, {23., 0.8300552485558286}]}]}, {
        LineBox[{{24., 3.5342511898108393`}, {24., 1.0302511898108395`}}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 3.5342511898108393`}], 
          Offset[{-1.5, 0}, {24., 3.5342511898108393`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 1.0302511898108395`}], 
          Offset[{-1.5, 0}, {24., 1.0302511898108395`}]}]}, {
        LineBox[{{25., 5.083089792677482}, {25., 2.3830897926774814`}}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 5.083089792677482}], 
          Offset[{-1.5, 0}, {25., 5.083089792677482}]}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 2.3830897926774814`}], 
          Offset[{-1.5, 0}, {25., 2.3830897926774814`}]}]}, {
        LineBox[{{26., 6.5999072365122355`}, {26., 3.6959072365122356`}}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 6.5999072365122355`}], 
          Offset[{-1.5, 0}, {26., 6.5999072365122355`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 3.6959072365122356`}], 
          Offset[{-1.5, 0}, {26., 3.6959072365122356`}]}]}, {
        LineBox[{{27., 3.600684117245801}, {27., 0.48468411724580096`}}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 3.600684117245801}], 
          Offset[{-1.5, 0}, {27., 3.600684117245801}]}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 0.48468411724580096`}], 
          Offset[{-1.5, 0}, {27., 0.48468411724580096`}]}]}, {
        LineBox[{{28., 4.196393061664319}, {28., 0.8603930616643183}}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 4.196393061664319}], 
          Offset[{-1.5, 0}, {28., 4.196393061664319}]}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 0.8603930616643183}], 
          Offset[{-1.5, 0}, {28., 0.8603930616643183}]}]}, {
        LineBox[{{29., 5.109933602601889}, {29., 1.545933602601889}}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 5.109933602601889}], 
          Offset[{-1.5, 0}, {29., 5.109933602601889}]}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 1.545933602601889}], 
          Offset[{-1.5, 0}, {29., 1.545933602601889}]}]}, {
        LineBox[{{30., 5.57087526680357}, {30., 1.7708752668035703`}}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 5.57087526680357}], 
          Offset[{-1.5, 0}, {30., 5.57087526680357}]}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 1.7708752668035703`}], 
          Offset[{-1.5, 0}, {30., 1.7708752668035703`}]}]}}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 3.2},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692741225511752*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"a", "3.97701470366354`", "0.4321892950624551`", "9.202020385740527`", 
      "1.163255685878209`*^-9"},
     {"b", 
      RowBox[{"-", "0.8050473474644311`"}], "0.7667630410371583`", 
      RowBox[{"-", "1.0499297754042602`"}], "0.3034120875622969`"},
     {"c", "6.696901162697048`", "4.688280715167089`", "1.4284343386333198`", 
      "0.16507061969877168`"},
     {"d", 
      RowBox[{"-", "6.259434264608004`"}], "8.410441987412145`", 
      RowBox[{"-", "0.7442455787670207`"}], "0.46340183079877506`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.692741225579836*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "NonlinearModelFit", " ", "will", " ", "almost", " ", 
     "always", " ", "work", " ", "IF", " ", "you", " ", "have", " ", "a", " ",
      "good", " ", "guess", " ", "at", " ", "the", " ", 
     RowBox[{"parameters", ".", "   ", "Tell"}], " ", "the", " ", "fitter", 
     " ", "to", " ", "start", " ", "with", " ", "a", " ", "reasonable", " ", 
     "ballpark", " ", "guess"}], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"it", "'"}], "ll", " ", "do", " ", "all", " ", "of", " ", "the", 
     " ", "optimization", " ", 
     RowBox[{"smoothly", ".", "   ", "In"}], " ", "this", " ", "case"}], ",", 
    " ", 
    RowBox[{
    "I", " ", "can", " ", "provide", " ", "some", " ", "OK", " ", "guesses", 
     " ", "by", " ", "just", " ", "eyeballing", " ", "the", " ", 
     RowBox[{"function", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"4", " ", "+", "  ", 
      RowBox[{"5", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", "20"}], ")"}], "/", "1"}], ")"}], "^", 
           "2"}]}], ")"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "30"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"myNLMGood", " ", "=", " ", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{"datalist", ",", 
      RowBox[{"a", " ", "+", "  ", 
       RowBox[{"b", "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "c"}], ")"}], "/", "d"}], ")"}], "^", 
            "2"}]}], ")"}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "1"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"myNLMGood", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1", ",", "30"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", "myListPlot"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"myNLMGood", "[", "\"\<ParameterTable\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Perfect", "!"}], "  ", "Notice", " ", "that", " ", "the", " ", 
      "fitter", " ", "has", " ", "gotten", " ", "\"\<the right answers\>\"", 
      " ", "in", " ", "this", " ", 
      RowBox[{"case", "--"}]}], "-", 
     RowBox[{
     "it", " ", "has", " ", "found", " ", "values", " ", "consistent", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", ".", " ", "within"}], " ", "about", " ", "an", 
        " ", "error", " ", "bar"}], ")"}], " ", "with", " ", "the", " ", 
      "\"\<truth\>\"", " ", "that", " ", "was", " ", "responsible", " ", 
      "for", " ", "generating", " ", "this", " ", "data", " ", "in", " ", 
      "the", " ", "first", " ", 
      RowBox[{"place", "."}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.5376428567815733`*^9, 3.5376429042963753`*^9}, {
  3.537643022494162*^9, 3.537643140918787*^9}, {3.537643186758814*^9, 
  3.537643225484048*^9}, {3.537643306633708*^9, 3.5376434199671707`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
2l/8n3MkxSfn5v7z/wMpF6kw
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 4.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692741235190617*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"3.3158407471401063`", "\[VeryThinSpace]", "+", 
       RowBox[{"6.700784584304548`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "1.0446629779616958`"}], " ", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 3.3158407471401063`, $CellContext`b -> 
      6.700784584304548, $CellContext`c -> 18.80232457849993, $CellContext`d -> 
      0.9783897586253757}, {{$CellContext`x}, $CellContext`a + $CellContext`b 
       E^(-$CellContext`d^(-2) (-$CellContext`c + $CellContext`x)^2)}}, {
    1}, {{1, 3.3732816259660248`}, {2, 3.362661660769326}, {
     3, 3.405000619010071}, {4, 3.225774103950346}, {5, 3.510104499815529}, {
     6, 3.2327751893137466`}, {7, 3.2216923161754316`}, {
     8, 3.312341519406916}, {9, 3.268601349380937}, {10, 3.900140047297829}, {
     11, 3.2186083766397986`}, {12, 3.2804735604655573`}, {
     13, 2.465224537704217}, {14, 3.909751469664847}, {
     15, 3.725469993106606}, {16, 3.141630242124961}, {
     17, 3.852896350455578}, {18, 6.663664824870565}, {
     19, 9.799322558436556}, {20, 4.688113749318705}, {
     21, 4.2699399614987765`}, {22, 3.5473264456305933`}, {
     23, 1.9880552485558287`}, {24, 2.2822511898108395`}, {
     25, 3.7330897926774815`}, {26, 5.147907236512236}, {
     27, 2.042684117245801}, {28, 2.5283930616643184`}, {
     29, 3.327933602601889}, {30, 3.6708752668035705`}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6927412352051783`*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FZ5aWPjP/w/uoOFa
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E2P7RWu/sPlABVwyFdW0dj9DMbncMgQePOt
wJYbyhdweM7gtjzpHCeUL+LgzsC0eqMID5Qv4XA6kdt25x2YvIzDjd9/57Ed
g/EVHFg9JV6uqYeZr+QQwHqrTEINxldxyNrGvqDGmB/KV3PoTV20f+t+mH4N
hzd7eN5k2MHUazkwPildcnwHM5Sv45A/zfe4tjtMv56D3y8Ts8NneaF8AweG
zABOfiWYeYYOv9ckBO2+xAflGzkU+FQemL5cCso3dvB/mHfOYaYylG/icJmR
9cmCA0JQvqmDnaiWSraIIJRv5qB9kHHDmwRYeJg7XGU2ZhU+/98ewrdw4Pia
/ZLHiQkqb+ngtyxFL+4uzH1WDmuWzvtXMl0Eyrd2eMZhezQrnAHKt3FY5GCl
ombFAuXbOjBVCS+fPR8WHnYOF9+J3Pocy+sAAFAbbVc=
       
       "]], {{LineBox[{{1., 3.4752816259660246`}, {1., 3.271281625966025}}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.4752816259660246`}], 
          Offset[{-1.5, 0}, {1., 3.4752816259660246`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.271281625966025}], 
          Offset[{-1.5, 0}, {1., 3.271281625966025}]}]}, {
        LineBox[{{2., 3.470661660769326}, {2., 3.254661660769326}}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.470661660769326}], 
          Offset[{-1.5, 0}, {2., 3.470661660769326}]}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.254661660769326}], 
          Offset[{-1.5, 0}, {2., 3.254661660769326}]}]}, {
        LineBox[{{3., 3.523000619010071}, {3., 3.287000619010071}}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.523000619010071}], 
          Offset[{-1.5, 0}, {3., 3.523000619010071}]}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.287000619010071}], 
          Offset[{-1.5, 0}, {3., 3.287000619010071}]}]}, {
        LineBox[{{4., 3.357774103950346}, {4., 3.093774103950346}}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.357774103950346}], 
          Offset[{-1.5, 0}, {4., 3.357774103950346}]}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.093774103950346}], 
          Offset[{-1.5, 0}, {4., 3.093774103950346}]}]}, {
        LineBox[{{5., 3.660104499815529}, {5., 3.360104499815529}}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.660104499815529}], 
          Offset[{-1.5, 0}, {5., 3.660104499815529}]}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.360104499815529}], 
          Offset[{-1.5, 0}, {5., 3.360104499815529}]}]}, {
        LineBox[{{6., 3.404775189313747}, {6., 3.0607751893137465`}}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.404775189313747}], 
          Offset[{-1.5, 0}, {6., 3.404775189313747}]}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.0607751893137465`}], 
          Offset[{-1.5, 0}, {6., 3.0607751893137465`}]}]}, {
        LineBox[{{7., 3.4196923161754316`}, {7., 3.0236923161754317`}}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.4196923161754316`}], 
          Offset[{-1.5, 0}, {7., 3.4196923161754316`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.0236923161754317`}], 
          Offset[{-1.5, 0}, {7., 3.0236923161754317`}]}]}, {
        LineBox[{{8., 3.5403415194069163`}, {8., 3.084341519406916}}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.5403415194069163`}], 
          Offset[{-1.5, 0}, {8., 3.5403415194069163`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.084341519406916}], 
          Offset[{-1.5, 0}, {8., 3.084341519406916}]}]}, {
        LineBox[{{9., 3.530601349380937}, {9., 3.006601349380937}}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.530601349380937}], 
          Offset[{-1.5, 0}, {9., 3.530601349380937}]}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.006601349380937}], 
          Offset[{-1.5, 0}, {9., 3.006601349380937}]}]}, {
        LineBox[{{10., 4.200140047297829}, {10., 3.6001400472978293`}}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 4.200140047297829}], 
          Offset[{-1.5, 0}, {10., 4.200140047297829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 3.6001400472978293`}], 
          Offset[{-1.5, 0}, {10., 3.6001400472978293`}]}]}, {
        LineBox[{{11., 3.5606083766397987`}, {11., 2.8766083766397985`}}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 3.5606083766397987`}], 
          Offset[{-1.5, 0}, {11., 3.5606083766397987`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 2.8766083766397985`}], 
          Offset[{-1.5, 0}, {11., 2.8766083766397985`}]}]}, {
        LineBox[{{12., 3.668473560465557}, {12., 2.8924735604655574`}}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 3.668473560465557}], 
          Offset[{-1.5, 0}, {12., 3.668473560465557}]}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 2.8924735604655574`}], 
          Offset[{-1.5, 0}, {12., 2.8924735604655574`}]}]}, {
        LineBox[{{13., 2.903224537704217}, {13., 2.0272245377042166`}}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.903224537704217}], 
          Offset[{-1.5, 0}, {13., 2.903224537704217}]}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.0272245377042166`}], 
          Offset[{-1.5, 0}, {13., 2.0272245377042166`}]}]}, {
        LineBox[{{14., 4.4017514696648465`}, {14., 3.417751469664847}}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 4.4017514696648465`}], 
          Offset[{-1.5, 0}, {14., 4.4017514696648465`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 3.417751469664847}], 
          Offset[{-1.5, 0}, {14., 3.417751469664847}]}]}, {
        LineBox[{{15., 4.275469993106606}, {15., 3.1754699931066064`}}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 4.275469993106606}], 
          Offset[{-1.5, 0}, {15., 4.275469993106606}]}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 3.1754699931066064`}], 
          Offset[{-1.5, 0}, {15., 3.1754699931066064`}]}]}, {
        LineBox[{{16., 3.753630242124961}, {16., 2.529630242124961}}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 3.753630242124961}], 
          Offset[{-1.5, 0}, {16., 3.753630242124961}]}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 2.529630242124961}], 
          Offset[{-1.5, 0}, {16., 2.529630242124961}]}]}, {
        LineBox[{{17., 4.530896350455578}, {17., 3.1748963504555783`}}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 4.530896350455578}], 
          Offset[{-1.5, 0}, {17., 4.530896350455578}]}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 3.1748963504555783`}], 
          Offset[{-1.5, 0}, {17., 3.1748963504555783`}]}]}, {
        LineBox[{{18., 7.411664824870566}, {18., 5.915664824870565}}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 7.411664824870566}], 
          Offset[{-1.5, 0}, {18., 7.411664824870566}]}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 5.915664824870565}], 
          Offset[{-1.5, 0}, {18., 5.915664824870565}]}]}, {
        LineBox[{{19., 10.621322558436555`}, {19., 8.977322558436557}}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 10.621322558436555`}], 
          Offset[{-1.5, 0}, {19., 10.621322558436555`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 8.977322558436557}], 
          Offset[{-1.5, 0}, {19., 8.977322558436557}]}]}, {
        LineBox[{{20., 5.588113749318706}, {20., 3.7881137493187054`}}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 5.588113749318706}], 
          Offset[{-1.5, 0}, {20., 5.588113749318706}]}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 3.7881137493187054`}], 
          Offset[{-1.5, 0}, {20., 3.7881137493187054`}]}]}, {
        LineBox[{{21., 5.251939961498777}, {21., 3.2879399614987763`}}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 5.251939961498777}], 
          Offset[{-1.5, 0}, {21., 5.251939961498777}]}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 3.2879399614987763`}], 
          Offset[{-1.5, 0}, {21., 3.2879399614987763`}]}]}, {
        LineBox[{{22., 4.615326445630593}, {22., 2.4793264456305932`}}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 4.615326445630593}], 
          Offset[{-1.5, 0}, {22., 4.615326445630593}]}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 2.4793264456305932`}], 
          Offset[{-1.5, 0}, {22., 2.4793264456305932`}]}]}, {
        LineBox[{{23., 3.146055248555829}, {23., 0.8300552485558286}}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 3.146055248555829}], 
          Offset[{-1.5, 0}, {23., 3.146055248555829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 0.8300552485558286}], 
          Offset[{-1.5, 0}, {23., 0.8300552485558286}]}]}, {
        LineBox[{{24., 3.5342511898108393`}, {24., 1.0302511898108395`}}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 3.5342511898108393`}], 
          Offset[{-1.5, 0}, {24., 3.5342511898108393`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 1.0302511898108395`}], 
          Offset[{-1.5, 0}, {24., 1.0302511898108395`}]}]}, {
        LineBox[{{25., 5.083089792677482}, {25., 2.3830897926774814`}}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 5.083089792677482}], 
          Offset[{-1.5, 0}, {25., 5.083089792677482}]}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 2.3830897926774814`}], 
          Offset[{-1.5, 0}, {25., 2.3830897926774814`}]}]}, {
        LineBox[{{26., 6.5999072365122355`}, {26., 3.6959072365122356`}}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 6.5999072365122355`}], 
          Offset[{-1.5, 0}, {26., 6.5999072365122355`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 3.6959072365122356`}], 
          Offset[{-1.5, 0}, {26., 3.6959072365122356`}]}]}, {
        LineBox[{{27., 3.600684117245801}, {27., 0.48468411724580096`}}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 3.600684117245801}], 
          Offset[{-1.5, 0}, {27., 3.600684117245801}]}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 0.48468411724580096`}], 
          Offset[{-1.5, 0}, {27., 0.48468411724580096`}]}]}, {
        LineBox[{{28., 4.196393061664319}, {28., 0.8603930616643183}}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 4.196393061664319}], 
          Offset[{-1.5, 0}, {28., 4.196393061664319}]}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 0.8603930616643183}], 
          Offset[{-1.5, 0}, {28., 0.8603930616643183}]}]}, {
        LineBox[{{29., 5.109933602601889}, {29., 1.545933602601889}}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 5.109933602601889}], 
          Offset[{-1.5, 0}, {29., 5.109933602601889}]}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 1.545933602601889}], 
          Offset[{-1.5, 0}, {29., 1.545933602601889}]}]}, {
        LineBox[{{30., 5.57087526680357}, {30., 1.7708752668035703`}}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 5.57087526680357}], 
          Offset[{-1.5, 0}, {30., 5.57087526680357}]}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 1.7708752668035703`}], 
          Offset[{-1.5, 0}, {30., 1.7708752668035703`}]}]}}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 3.2},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6927412353435507`*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"a", "3.3158407471401063`", "0.12923228899543235`", 
      "25.657989755619845`", "5.423251278488272`*^-20"},
     {"b", "6.700784584304548`", "0.7233096838729415`", "9.264060379262979`", 
      "1.0160459892163944`*^-9"},
     {"c", "18.80232457849993`", "0.09301025698158508`", 
      "202.15323759639293`", "4.302998133403683`*^-43"},
     {"d", "0.9783897586253757`", "0.12200908057245592`", 
      "8.018991324537948`", "1.691946929758769`*^-8"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.6927412353513403`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "next", " ", "question", " ", "is", " ", "about", " ", 
     "error", " ", 
     RowBox[{"bars", ".", "   ", "What"}], " ", "do", " ", "you", " ", "do", 
     " ", "if", " ", "your", " ", "data", " ", "points", " ", "have", " ", 
     "errors", " ", "on", " ", 
     RowBox[{"them", "?", "   ", "How"}], " ", "do", " ", "you", " ", "tell", 
     " ", "NonLinearFit", " ", "about", " ", "the", " ", "error", " ", 
     RowBox[{"bars", "?", "   ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Notice", " ", "that", " ", "I", " ", "did", " ", "not", " ", "feed",
           " ", "the", " ", "error"}], "-", 
         RowBox[{"bar", " ", "data", " ", "into", " ", "the", " ", "fit"}]}], 
        ",", " ", 
        RowBox[{"just", " ", "the", " ", 
         RowBox[{"points", "."}]}]}], ")"}]}], "  ", "It", " ", "turns", " ", 
     "out", " ", "that", " ", "what", " ", "you", " ", "need", " ", "to", " ",
      "do", " ", "is", " ", "to", " ", "*", "weight", "*", " ", "the", " ", 
     RowBox[{"points", ".", "  ", "A"}], " ", "point", " ", "with", " ", "a", 
     " ", "large", " ", "error", " ", "bar", " ", "E", " ", "is", " ", 
     "downweighted", " ", "by", " ", 
     RowBox[{"1", "/", "El"}]}], ",", " ", 
    RowBox[{
    "so", " ", "the", " ", "fitter", " ", "relies", " ", "on", " ", "it", " ",
      "less", " ", 
     RowBox[{"heavily", ".", "   ", "A"}], " ", "point", " ", "with", " ", 
     "a", " ", "small", " ", "error", " ", "bar", " ", "Es", " ", "should", 
     " ", "be", " ", "weighted", " ", "heavily"}], ",", " ", 
    RowBox[{"as", " ", 
     RowBox[{"1", "/", 
      RowBox[{"Es", ".", "  ", 
       RowBox[{"Let", "'"}]}]}], "s", " ", "turn", " ", "our", " ", "list", 
     " ", "of", " ", "errors", " ", "into", " ", "a", " ", "list", " ", "of", 
     " ", 
     RowBox[{"weights", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"I", "'"}], "ll", " ", "start", " ", "with", " ", "the", " ", 
     "errors", " ", "that", " ", "I", " ", "invented", " ", "for", " ", 
     "this", " ", 
     RowBox[{"problem", ".", "  ", "In"}], " ", "reality"}], ",", " ", 
    RowBox[{
    "you", " ", "should", " ", "use", " ", "your", " ", "actual", " ", 
     "errors"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"myWeights", " ", "=", " ", 
    RowBox[{"1", "/", "myErrors"}]}], "\[IndentingNewLine]", 
   RowBox[{"myNLMWeighted", " ", "=", " ", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{"datalist", ",", 
      RowBox[{"a", " ", "+", "  ", 
       RowBox[{"b", "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "c"}], ")"}], "/", "d"}], ")"}], "^", 
            "2"}]}], ")"}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "1"}], "}"}]}], "}"}], ",", "x", ",", 
      RowBox[{"Weights", "\[Rule]", "myWeights"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"I", "'"}], "ll", " ", "compare", " ", "the", " ", "data", " ", 
     "and", " ", "the", " ", "old", " ", "and", " ", "new", " ", 
     RowBox[{"fits", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"myNLMWeighted", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1", ",", "30"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"myNLMGood", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1", ",", "30"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", "myListPlot"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"myNLMWeighted", "[", "\"\<ParameterTable\>\"", "]"}], ",", 
     RowBox[{"myNLMGood", "[", "\"\<ParameterTable\>\"", "]"}]}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.53764342715128*^9, 3.537643465379669*^9}, {
   3.5376445416591883`*^9, 3.5376445761558228`*^9}, {3.537644837960108*^9, 
   3.537644866120265*^9}, {3.537645203370668*^9, 3.537645327550395*^9}, {
   3.5376455459302473`*^9, 3.537645546365082*^9}, {3.537645577258219*^9, 
   3.53764557924059*^9}, {3.537645615389141*^9, 3.53764571956234*^9}, {
   3.537645818812132*^9, 3.5376458223312473`*^9}, {3.537645911569216*^9, 
   3.53764591210537*^9}, 3.5376460716650667`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.80392156862745`", ",", "9.259259259259258`", ",", "8.47457627118644`", 
   ",", "7.575757575757575`", ",", "6.666666666666666`", ",", 
   "5.813953488372094`", ",", "5.05050505050505`", ",", "4.385964912280701`", 
   ",", "3.8167938931297707`", ",", "3.333333333333333`", ",", 
   "2.9239766081871346`", ",", "2.5773195876288657`", ",", 
   "2.28310502283105`", ",", "2.032520325203252`", ",", "1.8181818181818181`",
    ",", "1.6339869281045751`", ",", "1.4749262536873158`", ",", 
   "1.3368983957219251`", ",", "1.2165450121654502`", ",", 
   "1.1111111111111112`", ",", "1.0183299389002036`", ",", 
   "0.9363295880149812`", ",", "0.8635578583765111`", ",", 
   "0.7987220447284346`", ",", "0.7407407407407407`", ",", 
   "0.6887052341597796`", ",", "0.6418485237483954`", ",", 
   "0.5995203836930455`", ",", "0.5611672278338945`", ",", 
   "0.5263157894736842`"}], "}"}]], "Output",
 CellChangeTimes->{3.6927412434586287`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"3.344312133245701`", "\[VeryThinSpace]", "+", 
       RowBox[{"6.6767062809726525`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "1.0551106441672329`"}], " ", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 3.344312133245701, $CellContext`b -> 
      6.6767062809726525`, $CellContext`c -> 
      18.801745686804132`, $CellContext`d -> 
      0.97353371820566}, {{$CellContext`x}, $CellContext`a + $CellContext`b 
       E^(-$CellContext`d^(-2) (-$CellContext`c + $CellContext`x)^2)}}, {{
    9.80392156862745, 9.259259259259258, 8.47457627118644, 7.575757575757575, 
    6.666666666666666, 5.813953488372094, 5.05050505050505, 4.385964912280701,
     3.8167938931297707`, 3.333333333333333, 2.9239766081871346`, 
    2.5773195876288657`, 2.28310502283105, 2.032520325203252, 
    1.8181818181818181`, 1.6339869281045751`, 1.4749262536873158`, 
    1.3368983957219251`, 1.2165450121654502`, 1.1111111111111112`, 
    1.0183299389002036`, 0.9363295880149812, 0.8635578583765111, 
    0.7987220447284346, 0.7407407407407407, 0.6887052341597796, 
    0.6418485237483954, 0.5995203836930455, 0.5611672278338945, 
    0.5263157894736842}}, {{1, 3.3732816259660248`}, {2, 3.362661660769326}, {
     3, 3.405000619010071}, {4, 3.225774103950346}, {5, 3.510104499815529}, {
     6, 3.2327751893137466`}, {7, 3.2216923161754316`}, {
     8, 3.312341519406916}, {9, 3.268601349380937}, {10, 3.900140047297829}, {
     11, 3.2186083766397986`}, {12, 3.2804735604655573`}, {
     13, 2.465224537704217}, {14, 3.909751469664847}, {
     15, 3.725469993106606}, {16, 3.141630242124961}, {
     17, 3.852896350455578}, {18, 6.663664824870565}, {
     19, 9.799322558436556}, {20, 4.688113749318705}, {
     21, 4.2699399614987765`}, {22, 3.5473264456305933`}, {
     23, 1.9880552485558287`}, {24, 2.2822511898108395`}, {
     25, 3.7330897926774815`}, {26, 5.147907236512236}, {
     27, 2.042684117245801}, {28, 2.5283930616643184`}, {
     29, 3.327933602601889}, {30, 3.6708752668035705`}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6927412434618597`*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vy8u/uf/B5vEjAo=
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF2nc8Vu//OHBFyn3be68blbr3fR9bL4UySsmqJNHQsKWSNMyUiIxEURpk
Fg0ryR5pmxkZiZAIhfyu4/v5ef9Tj+fD4z7nXOt1ruu8XkpO7pYHl3NwcJxA
/+D//yrovMXB8XMDX+7ZwOYQAtjdtNhXGzG55JLzZQrRMn+WLGIrxpN6dhn8
f8dwbzJ/LsW9ZJ5m24D0W4Qlv2mhfU8PFlhyttayJh9e4SUnKzQYyYaKLnll
HCGfNiW+5M92RtUHdKSWvJX11TclT2bJa+3P1M/Oyy3ZgFBBdFJQXPIrr9kF
EzulJXsvy6sy8Fde8umk+D0lz0lLLlnQOO4+prJk5iUbC7qQ2pLn5e9znDRb
veQ/bd5BDR5rlqy0wZv8QmDtkk3uen2+l70W+P/nqOFtJVmm6qDzPzcz16UV
DKgD99P/s0aksY/RqXUwxgxYdPzQfsNPPOtBwCx00fbtswqlduvB/XD6/92v
IXb2/oP1sJxLJwh3UIXTEZmm9cB05QjGPVBMbY6cWg8Xxi6F4JbQEuc3JZDh
WkNDKO4tBXOGXPJkyHWLuoR7/4S7Y89qMuzakReO24/ee6aUToYUKvcV3NHu
NvE3dchAFk6IwP0oq/bxKSMyBAZ5RuLebtR4TsSUDGWuR6NwT3W8Nc/eRoam
Wd9ruG/6fJQy2UmG7OyEaNzA2zLQa4uur/wuBnf/3fYnAfZkoAorx+IO1+k6
L7WfDDvsIuJwfzw6IG1xlAx/OYtuLI7f8qFv393IUP75wk3c8okj+UHeZJju
OpaM+zV9/ILCKTJwlp+5jduldnJboT8ZeizyU3Hz7Z+Rsb5AhotRkmm4H8/M
Do4Fk8Gm/NF93HOrOQNVI8kgqeiaiTv1Jff2shgyCC6/m4Pb2JYgtyeBDPqm
Ek9wD4/yDf1OIoPA5TdPF8c7ROhZVCoZHNIbC3Gz5cWC1t0nw6qvUi9xtxVI
7qjKIMP7puevcav2KwzPPiFDNH3lG9x1/qTncc/JsGn49QfcHqKrg+klZNCc
HGnFLZapbtnwigwBpIhu3IWbKAqHq8hg3Jb+Dfe+dvqPZfVkmOPdOoaby5v9
IqmJDD/Mz0/j3nZHd+f7FjLIhpXxtCBPaIGi6xcyPBHrE8Gd8G7TyMqvZJj/
USGPW+/I5sI7A2Q4b+Ohjvsrh1mo3jAZ7M5NYrhDE7ZZtYyRoT3U0RD3epql
kvckGeRjKixxn9y3q+jhPBnu5xR64Zadtg/btJwC/VleQbjLrzpad3JT4Fu2
Wzzuw2oHlE8TKahfKx7h5i09PCYiSEFxI+IV7jzrY8XZohRwPtfdgttmxO2S
iRQF/o23juNOkfUlnVOmgPdJ5tpWZKP80z+lVlNgKuD9ZtxDZmdL8tdRILc0
1gV3ZO/5cAsaBSZmUy/jZp0Jsh1iUcDBRj4Pd6twmEqwFgX2Hme14g7IuDyu
oE+BkguCXG3Ita3Rl603o+cbbnXC7eYZZ/fTjAKiZynxuEV5ElUvb0e/75do
wv0iJfmXqjW6Pvae0I7soJn6smwXaj8km+LmfJt2ZY8DBRQbi6/ifnj44a4p
JwrIfD7VjPtXXM7EuuMUuF45d7ID+bnYncQcDwoY8qa+wR1w/boB8wQFNspM
qn9BNhQJHXx6mgKgsCMCNyH6dKR2AAWK8iSncL8VPI6VXqTAC7W8g53IcZEO
XwxCUXs6QzpwK0dsWmcSRQGsq6inC3mQiL1vuE6BPZvEPLvx+B6+5vT2GxRw
7Uvh6UH24ZFR/JhMAavq0Ue4tcP4qm3vUCB4S7zdV2SOlRxu7fcpMB2pI9iL
XBX8S3TfIwrMEEI+4N4Z2Ox0KJ8C6/IGz/UjSy+v4xl6ToGs3LCjA8jd54tz
XUsoIJ3V5fwN+f5Ctu34Kwroe7w5Poh8PCD1n08VBT67bgz5jsyYj7k3U0cB
cTcsbwh55kyIuX8TBU7Ck9FhPH6ePpYY2IL6d13BvVFk05m9Biu/UMCmLkHp
J7Lgye2D4T0UqB19nT+Ov59+b4zkH6AAE645TiAn+bCx6CEKGDm6qf1GdppY
/UVsjAIfezpWTiOv8ZIOujFBgUAzb+4/yPnuC+9S5igwJ9mzfx6Pt6Pjp1SW
UcFcwK58AY+Prn0KD1dQgeKhuXl5KAEajta65vBT4YR4dNVK5OjvRaJMESr0
alyoJCDbuWQXPZWgQuXWmnE+5L6DMTylilRgzN7tEEXO6AvONVClwpqRvBRJ
ZA/nU7aVa6lQ0cOXLIs857j3XgODCt0bDc1Ukcu7LMy3a1ChVPMdpzpymMPG
iQ86VPDUFltORRazX23QbkgFSYZ8lxZyR5vUoIMJFe4d5K/agHxnF2/k161U
6KwX5DRGptiOd3y3oQIpY/7aTuTJT72BrnuoIPjz88hu5EKrz+rj+6ggc/7e
EydkY8uiUzMuVAhufxvjjcz7LkvB35UKM30ahf7I7y1SqhY8qTAll+MUguyw
NVh05Rkq3FLSs76JrNJwsij8HBVSbLuz7iMPmR514g9C9yfm33uM7LvFIlcs
ggoxTRzXG5DdLvsdmr1GhTKXhE/tyAff3JPtiaOCfWz93DCyldVcWGYKFaT8
FKkCYQQwi1+9IfoeFXxXe1grI29ss/x9MoMKIWeq4jFkumP6/k35VDiYmZvt
hLzm7keJtS+oYOVkkuaHrDiw0MhfSoUuIa6ZGGT+4zbabdVUKPlAX1GPzJ1z
4efLBioMEG8ODCLPj2fev/eOCqwRNd9Vlwjw4ySniGc7FQyio/+aI/cVUmpt
uqnw2CVFwQu5fX7XOd1+KkgHGu68gVwXmDu8cowK0+FpO0eRy6vaU0cmqFDE
0N8tG47iEc9Kuw8zVBg6YthrjvyxmuJksYwGgkcjFgqQtx8x1CvnpMHYQWLL
KHI9Ybckm5sGA53hJeqX0fW2Br+RJtJgsva9WSay/lhiegQfDdZXyW7+hVwY
lRvEIUiDT60RkzpXUPz+0K49IEqD0rHbCu3I60+Mi+2SQL+/Sl+gRaB4J75y
vF6KBu/MflldRk7ZxXiQJ08Db89u/W1X0ftjdvNFFSUayNxqM36GHJ+0d288
iQaU8ppM1UgCXO0KEzm7hgbbn72KFYlC8e7CrdExdRoc+qCeGoMcopxf60RG
7Qn1kZG+RoCzB7vObWHQgD4kF6ETjeID9+/dRSwaXDVyU2lG9nlIwCgaNNh9
puCoXwyKL8PsHyK6NKih67q0Xkfx8IpZdYg+DRr0t7bFxhLgAGX/nT9Ag2f8
DM89cQTY43nFrsuIBkPCzEzOBBQ/hO8wLbfQQCD51tpvyJb5z/grTZENigI+
3UDxZ/prRYYFDe5rC137eBPFx4SZ23KWqH3qy00HktB+V5v/TJQVDTTKbN5z
oX235lktuu8uGjwSKfU/moLii7wF7/c9NGC8V331OJUAtLID3/Y40AAb/ipF
uEuA1ZxRyQbONOgzNwodvEeAnymmCeEHaVAfVbLa5gF6n+iviPlwmAYHUq6p
fHiI9ot+fmEHj9OAuNkvcP4RioeS7MBsNxrs+WMllZlFgJaCsbPTHjQ4uMnC
+3gO2m+NH/C+dIIGzlsnBVWfoPtHKri9P4naryeYK1+A+nd9m4uMHw22GRyu
W/8MxRcXC4esABrsP7jD6VIRGv8uLZN3oTQIE1H7vasSxauzk5ukw2mgkKOs
wFeD2iuTo+98hQbG/1h67XUEqLFRYf2OosGXOVjR8BbtvyY7KfoxNJhR1Yj/
+QHFx+gba0NjafCqymeE2UyA7438ClKJNHj8XJ9DphPt/47VSjkl0YB7bW1b
WQ+KxzxBoo9u0aCnt7HgUj+aP0Z/ePTu0uBmut902AgB1It7Jx0zUX+tEeff
t4Dex7tujaVn08BIOFxBn4sIhdN2Q79yaaBnfG+VKQ8RTJlvuoIKaJA9dbp7
RIQIwu/C2hqf0SCu7t6dMCkitLlt+iReSIPUF0G91gpEOJrxvO5hKQ0S7zh+
jVhHBMYW78rxMhoc83hSMEsnwt9+cpn2axpEhQcy7mgSIVzpbkFDNQ2GH6nm
3jYmwqOEiJSfb2kQy19tceUgEXywLTe1PqD+apaqGXUlgu7H5XEXP6H2Jke1
xPsSoUHg1GXRNhqQ48v2VoYR4XoWI2RvBw3WtEg93RpNBHuzkfP3O2mwUNHk
qpJEhB8hTr6avTRo/JKpVJlLhHwVOc8L/TToCPIxjikign9587G6b2g+Hn0l
87yKCLz/zPfb/6DB4MmjIfydRLTeNczP/0brfbPL+HohXuA7cXXb32m0ngRq
uqUVeWHUp3+7z18aTASSIIjKCzk+MdYuCzRoerv5wScLXojyGbL9uowO2c+T
Jl878oKHj8Fuey461Cme09X24gWGz5jDdh46wE//3Po4XhDxMd5fR6SD13IT
15F0Xpj0TnY25KfDsoNWRmklvFDgbeaiKUKHybCA150DvKDp/cBTUY4O6rIm
vwaAD6S8/3knKtChYqvhZqFdfPDXy9pXVJkOEyote3948kGRF+eZVavpsOlV
06rX9/hA32tf0E8aHcyOykbZiPODgtfTkKNMOuQB8Bxj8QOHF9+lPjZyMc8v
85388MqzKKJFmw40jk9eoTH8YOgpEV9mSIeOH7EGOvICoOrpdkN7Mx2tW1kT
hU0CwO1ZeTPfhA5ZWXoqIy4CUO3hnfJwGx126yRIWD0TAFOPpvQoOzo07WRc
+0wVhHUeapmEPXTQb34nrGAsCLweZ7OD9tLh38W1T77bC0Kj+7onp5zo8Hls
1IV4RRC2u4cWOx6nw+2BnfbpPwWB7t5Z2uZGh4cuRYXriEIg7M5+ZeVJhyTO
7a46akLwwa23cosvHaQGB2NWOgiBjduGJtp5OtCj3ph4fhSCPa7TPRzX6VA+
3UEy/SIMDd1GO9zj6OA4I9HmwiEC+lbXy74k0OEuOXedjIoIKOrQbxcm06GL
mzqh7SoCfauO2fs8QP17+V/yAW5RcEvr/PytkI72o1+4l1mJQZcE2dimhA5n
c5sVWOfFYPvlMwUVL+kgJ5d2ZTxTDJhektdTK+jwnNofuWKVOMxssNyx5w0d
rkbH7HOuEIeL7ZX1b3rooCEeNapoJQkT20R19ProIH6z5aZAmCQcKHfKeDSA
npdQufVAsSRsTl8ICxtG7anleshQkwLek1rGG3+j+efrpr7snxTECWeVFaxi
QOLjp+TpQhlIN7lekERlgJ23X4OniQIcehFq2ENnQLHqe/+FswqgsvbMB1UW
A2b8RHc6PlaAlFVO49maDKj3tWzfxKcIcdVU8isDBhyxGWr/6a0IF43q0/p3
MoDXx81rnZYSQEEpU92GARd2p5p3bleCeZXH5W52DDiv8N7R0kUJTnHd6J62
ZwA1h6ruE6cE7q8PyRIOMSBVeTbRbkwJ7A2WX6ecYoBC8Cbh0GvKIJ33W9nb
D91/x9j0mjRlaFb8nvfMnwHldQGKh54qgyXH2ya4wICmvqKi9FZlEPR47RAc
yICDujyrMoeU4U3X05HaYAbUpZiYGcwqg8nLZOLOcAYc+6jSLStDAm7qtcT4
KwzwznFw3qdOgopbQWs7rjKAfeqyAVmLBBBwbPPBGAasi5D442xNAkxPK/Bk
EgP2/ytL5Q8jwWTmeuHiWwzYnPJpwj+GBHmyiqkcqQwwIrKaj9wiwfo57peX
7jEgfv31hRePSTB07O/WNw8YYKHFLJcuJsHD9pEO4QwGmEy3Cf2uIAGp6OPf
m9kMILracgp/IkG3es2l7lwGtL5vuWvZQYJbiUWSqk8YcKdQrWlVLwnsCTkP
jhQwYNgiLZv5nQTSfnew7GcMMLzc5v9+lAQt32Mrf71A/bs7NbhvggSxuy5Z
aRQzwFHLSO3IDAksa/17z5QyQIyc3rhvjgSCWh5eZWUM4JM7OFe9QIIBAgcP
9poB2MLDrS3LVaC4I/L2o0oGZN1Vk4MVKhCdrYAp1TBg3r1cYIFbBY6cz2mI
q2OA3DXrXtFVKgCWG5x5G9H8My91u4AsrtL050ITA+6rDaUaIv/47RA1/Y4B
+1pbgx1WqkB59aia60cGyMre1m1C10+4EVDy9TMDxROrZfGcKuB2jN/KrpUB
lkF8a55yqICh3q2hxnY0ny5VyJHnSSAjQLmwqZMBgkZ6LnOofb+6SyRedDNA
cW3/PZVJEtQ83ppN6WWAhHxmxH3UP7eCvhim9TMgNrR59OIgCXxsXNulBhnQ
bdeUW9hDAtM1856RQww4Y97/flsbCRT/Xlm1YoQB8pbix+E9CabqZW/7jaG/
b6nKiKolQWNyJvvnOAM2Sft+hDISpLnrNhycZECerY+R5VMS+Bk0OLVPMSDj
cJhH1SMSqPUPR1bNMuA9hynly3USzD09o6b7jwEf2pNFAtH8eh9GLMnjYKL1
H2IbfYYE59avG0pawQSzwWXBk/vQ+HofNfQWYKLnMQ3mUCZBttHftkEhJsTd
Odu2Vgi9syTCPR1EmfA74H5U44Iy0IvSb5lIMWFSZtXPiHZlCF/+fUaBxIS2
NZtCtCOUwfHjqchYVSbMykX4BpxSBuz+KjXiGiZIxB7v2+GsDL0ma3ZOrWeC
CiW/5LGGMuheO5zVgDFhXqjfJKddCYSdpzdt1GKCG49R/qvXSjDICm17psOE
foL9rTOPlCC25f7Ku+i0OjhwMuTXaSUYVRjYf9qUCfdG/JqMRJQgNfuAuJoD
E8yvOkxaaStChf+NBk9HJgznPV6hp6gIA6ZvLpY4MWGzAFcyF7cirP+mMWZ1
mAkHBA/4nL6jAE8ViDWBHkwIUHxVSWuUh4aovNM9F5kwRArQt5aXgymvfx1J
D5hQPdLttb9JCqQMmDGD6Uz4V7KfqpUkBboCLiasTCbQdmu/2HNECi48eldQ
n8uE43vepkdwofjal3b17wsmnHeUJ03rS4KStRnYNTDhYdCVTpUqcTAknZ+6
+4YJ/pjc0GiCOBwaz88ce8sEfsbc8nXHxSEzQl4q9BMTgmql5xZExAGrGh8v
6GTCA7UYD+MjYmCukXBXZJwJ97k41basE4WFUxVVOyeYcPEs59lQ9L55XPjz
e8xvJnyUf2pv+FUEJPVNaKJ/mSD1oGBe46YI9Bv+LRblZMGxsRBuXhERSAhR
67ZawYLkL5OOer+EwbzGkjN2JQtUPjWrjLwThsdmj0zEeNHfJUxp1dHCEGBp
/1lMjAXUTzHUvdLCQL8e9sdagoXOS1rSfvNC0PcpXzZOigU9mtHxwj1CYLqL
z1lcngX3OfN/PEkXAgnH0jHx1SwICFT9lwZCkOuqyCOpxYL6q+atoUGC4Jxj
vt5OhwVXXBYeLnMXBPHxUxYJeiwoEtuw+vsuQfD3eRcruZEFsW+b0uZogmBy
5qKylBl6vsRwm7U1AjBXnG20aysL9gf6GT+9KwC5/9pcbliwYBLynYnnBUD8
IjNHygpdr2dqjFNHAL6G9elI72VBdOax6P4X/BBbJ7hv9z4WyN1/63zsJj9s
4dW7mLifBc38cZ5pZ/khJzK2RvoQC+yiBINVDfnBP87YWsadBSvoz/kkW/mA
2uJ1ao8nC/xKDex+vOSDr1K3b970ZoHEzKi5wwM+2JI83SNzigWPMzQ8BU/x
gVjaQzfZCywQUNcsdVLkg+7NnjciAlmQq1C6W5HAB5nDWhX/gllQKLfXNGCS
FwyZ9VI94Sx4JbDQxVfPC4LNMYaWESxoY1hOaj7jhQ4/e/fXkSw4ZMHQmr7L
Cz7lIxX3rrPgyYDJOcVzvACHno6Jx7Pg3yfftcGuvMBLOCcddgONp22VjYc9
L9zdIehx9BYLuhuXDTXq8ML7boYM9SEavzsDr3Zw8KJ4OGuUksGCExdSJON+
of3/mgoPoSwWKLYUbTbpJ8IyD+uqiTwWcDm1So7Xo/26iPz4gXwWnDx4zLT7
JRESng3IfH7KApgr9WbmE4G2cNLzeRELbp99aTibTIS5O5C0thSNV9uTD0dj
iFBjzFOdWMYCdTPZtaxLRNh3NVH2bCUL9rwAz7oTRLgqV1Jt0MSCVluRqdeW
RNj9KvjX43dofhzrG3xpSgS1g9vkVD6i8blta8+5iQglmV1e3K0s4JCrOmXH
IkLY9ofJJ9tZULYjUOIQmQhWkx41g19YwL97i/ITNXR+0FkuX/+VBeninD2c
0kR43lW3RbefBfncFV85RYkQFBjjnfWNBbfGfg/r8BNBtl6lNvIHC8iVq9W2
chLBbPdmH6spFlTNNM5VjhFA/J/A7coZFlRYxOXZDhPga2pLLTbLgrjb6Umi
39B57vsRBSkONhAtA48SughgHMEwDV/OBon3rpHQTgBh+qzPLBcbhqTvuCWh
82HGqSt1X3jYoO/gZ1SGzpO+sta/t/Gy4e6kek1wIwE2lskplvGzQbLwp/Rx
dP5sXZlz4o4IGyJ/nr0XV0GAVfHvFA/LsYHHpNfUqJAAihobjmUrsMGjc1hU
+jk6vzZnFvxWYqP9lbwJ11MCHJEIMw1SY0N/zUZu8ccEuPjs9/X6NWxYHfNk
tW4uARJtnbuE17EhW0GkzyebAHXx+j6pVDZk+PHEy6Dz+FeNzNJBOhvtIxK3
haUT4G+zFA+NxYbbjM/KK9D5XV3yd3KpJhv+5X3/vB6d9y8nPKpuN2BDYjGX
vWoKAdI0pYRJhmzwe+ZQxXmbAMUtIfZHjdnwJmbnmtFkAvyQdBqfMWVD+OA8
b/9NAnC9aNKBrWx4G9tW8DORALK79EJCLdgQvdLjDjey+Q1JGXErNnT88nlh
kUCAA1ohB/fasEF6/KzqxXgC+LdO5KTZsUFTzciuJI4AWVJNhsy9bJjUznpm
HkuAqhe6kX772MCdd14/5ToBOndltL7az4blvFthNoYA/InBbtsPsWHu3Vho
VTQB1LQnnse7sEFbcEgPQ9Zvc+TsOsoGm9D5bZnXCOAurZvg6o7u92pFQEYU
AcIK07/me7JhlXuiAgM5ZbcEec6bDTdWHSC9jCTA28Rfr8JPscEydd5j8CoB
BrUded/7saF7/wOLIGSO9kYbqbPI1yQLVZDpMunDDy6w0XvbzNMrggCmReLY
WCAbuESFnBSQnfYEncdC2OAmHKr29goBom/uE6sMZ6N1yA7WRc7QadzHG8GG
I+FFb6fx72nt2hk7I9nw7YS35VPkCRnxDV9j2OCwYf8xXWTe4sBLa+PYMKh7
7iUnsor9+AePBHT9vpDXjeEEsEpqcFlIQs/jtMP5CPJxXe0nxrfZEOcsXKWN
HNTxYD4iFfVvxd1D/Mj5soHRsvfZcPOP/2zRJQI0FP/scH7Ihq7nAS9j8e+L
9g6rH2WwofpknqMnsliyVrFWDhvm+5/1kZGNb2/if5zHho15yoK8yL6pWx3V
89mwpTqT8COMAC339nPJvGBD640LQnnIPA+P2cQUofttT/4Vi6ydceIhsRSt
R9IBc3/kpOxL5nPlbPDdypbfityYG3PLp5INAcvivTSQ/z1O/vmjmg3iBzfM
4N9f9z3Lu/6lAa2HB5y75kMJEPWiaMC6iQ218XXiP5DLiio137xjg0avXD3+
fVe5rLWj9DMbZgd0+0qQd5b3UjRa2RCStEDLDcXzqSPnc9rZoBpNMbyLPFCz
TDWlmw2u1v9iLiNL1BNPSvayocKWo+Q88pZGsdqofjYkcKsG+yKnv1vremGI
DWljNW+dkds+MF/++cEGXu+dhnuQCZ/1hLzG2EDh59PAv4frtGx2Hhpnw7vx
qVQz5ONtOwqcJtH8vugWYIic3LFnZfsUGzjm1lTpIb/pPLhr5x82cOpRvTWQ
ab2n5zf9Q+txqmFgHfL+/kCLYg4MpjR/31HD8wXfIlJZnBjkPAzMUUJ+/T1+
InMFBvfShlbK4d/jh1ONVFdhcDq57QGeH1AdfRSfTMDAbcWGy3j+wOZnwXcx
PgxWO+tkCyI/m6yN4BbGwLf9WhoP8uDUh64AUQx+9jA8uZEl/3yhT4tjUFI0
6c6JbDL7LdBdCoPpjuFkDmS/+fFP32QwuP/JegbPfzxamF3tKI+BEhbvP4vc
sYzbr0URg9IrWmvwfIk+t7R8rSp6/gGfH5PI7qtUPAzWYHCCXcuB519SCJTy
F+oYnM8aZ+L5mXe8mqIMMvp9p1jQGPJygY2HMqgYOKqcGhvB8/tC5s+VGRgY
aPr4/EA+IGJDuMnCQK3lrBCeD6qUOJp9WQsDBbk/EXg+aUrKh4NLFwMX4suj
eL5JTTbA0l8fg7gPmrvxfJStfFjaJGAgwoA9eL4qTDF66vgmDERFy4734fk+
5aQt/UYYhN57EoHnt4ZU7ifu3YLB/mOqJXg+zHxtof62rRgQrX9vwvNltauP
5CZZYDAinJiG59eM1SSVh3dg8HKQKIC7QqU6RssKg8KWpxfxfJwByXdFmA0G
HzGBBTxfV6qkevKzHQbJGtcCcesqfhxU2YNBXlCZAG5MjtHwah8GJ2Ps9PD8
3xOZHj1BJ9Q/3kNf8PwhTToqx+EABkZrzgThzpbcoJR1CAMVYjYN9zqJ0ehZ
FwykGtd9XcxPiiVzmR7DIHj9nQTcaqLmvgmuGIhnv96JW1EoYxfbCwON04Of
8fxnssCu+kAfDCocDt3CLc2/Su+9LwaX1gQdwZ3A+yxb8TQG9ZdXaeIWIx5S
dD+DxiO1hAd3NI9YdMlZDFKeeHTi+VjBVRWcvOcxeCr8qwA3YYXyt4dByCty
juMO5XxnNx2CwdemBDPcXMvP1xldwmCAO2s97oscVN3rlzG4mVkjgHvh35es
rxEYBPXUTeL5ZP/5Kwr0KAy8Kq+34/47q3PtXDSG3ks8FbgnZ274yMaj9uwJ
vYHbc3rLwNEbaD1s2BeCe/T3tO2LmxjYXAvwwX188n7tylsYKDPfOuP+/sta
xyYFrUdbsMJ9aJwrK+0OWo/Hi41w9409kZ9IQ+O/kqmJu/OH0PKodDSfLjcp
4N4zXObd+QiDqLfNorhbvrv3r89G6wG7TVjMjw/K257JxaB7tdQy3B8GGmtq
H2MQ0641s1i/0e+vLVmAwZEtU4v1Am9612Ueeobmu5ThIO6a7kuRnMUYXG12
bcNt1KW5zLIUg+oNmh9xl3/55pVShoH1mMdi/QJ0xPWNlmMAZwVrF+tr2oxs
9CoxuDErUIFbu3Wy+nI1BrVjLov1EM+b72q11WKw10ysaLEe4+MyuZNvMNg3
sWOxvoL6Ifdq5VsMUrlaFusvMt/t4xD9gMHO2aTF+gz1t/xeTp8w+BSalI77
wZuS3txmDDLuvl+s51BpPG690IpB5RWdxXqPO/Uy1Vs7MGC8+rBYD5JUczpj
qBsD0vrgxfqRDG3FS+RetD7qUhfrS55nVh326EfPE969WH9SJe9q/OQbBm9F
NyTg/hAlojr1HYMQ7aLFepXu5YWcWj9Q/By3XKxnGfVx/HpmFANzS67ruAm7
sm4vm8CgTCxrsT5Gsn5ngOFvDM4Ypi7Wz6jp/bUPncYgLe/hYn0NKydFp+4P
Wn8ryq8u1jspbZbmm8OA8m94sR7HfsX15mgODVAxcV2s1zn1vfu65AoNiFBT
uYw7J89PQIVfA77vFF+s9xk4LRpOldCA4onoxXoguY3ZXDqKGnDI2nexXsiK
sOWc8VoN6Ku8t1hPRFuXc8RnqwaY/xZerDcimotb3fHUgIKDaYv1SC1vPWQV
yjTA5cy5RadZ1/fd5NeEK6/+Vz/lXJnaYasJL/9X/2Tj9dJBLlUTRP7nitdG
Aud+ai7VTzHEGl52b9Bacm4LCLyN+M/kpAKHl+3/2QDrHFB11V7yORsFmzcE
nf/qyS7dzv6X/J/NU+cMTSm6S/6h71XeXPef742prR2x11sy6WJSpG/2f04V
FZ5aWPjP/w/uoOFa
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E2P7RWu/sPlABVwyFdW0dj9DMbncMgQePOt
wJYbyhdweM7gtjzpHCeUL+LgzsC0eqMID5Qv4XA6kdt25x2YvIzDjd9/57Ed
g/EVHFg9JV6uqYeZr+QQwHqrTEINxldxyNrGvqDGmB/KV3PoTV20f+t+mH4N
hzd7eN5k2MHUazkwPildcnwHM5Sv45A/zfe4tjtMv56D3y8Ts8NneaF8AweG
zABOfiWYeYYOv9ckBO2+xAflGzkU+FQemL5cCso3dvB/mHfOYaYylG/icJmR
9cmCA0JQvqmDnaiWSraIIJRv5qB9kHHDmwRYeJg7XGU2ZhU+/98ewrdw4Pia
/ZLHiQkqb+ngtyxFL+4uzH1WDmuWzvtXMl0Eyrd2eMZhezQrnAHKt3FY5GCl
ombFAuXbOjBVCS+fPR8WHnYOF9+J3Pocy+sAAFAbbVc=
       
       "]], {{LineBox[{{1., 3.4752816259660246`}, {1., 3.271281625966025}}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.4752816259660246`}], 
          Offset[{-1.5, 0}, {1., 3.4752816259660246`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 3.271281625966025}], 
          Offset[{-1.5, 0}, {1., 3.271281625966025}]}]}, {
        LineBox[{{2., 3.470661660769326}, {2., 3.254661660769326}}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.470661660769326}], 
          Offset[{-1.5, 0}, {2., 3.470661660769326}]}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 3.254661660769326}], 
          Offset[{-1.5, 0}, {2., 3.254661660769326}]}]}, {
        LineBox[{{3., 3.523000619010071}, {3., 3.287000619010071}}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.523000619010071}], 
          Offset[{-1.5, 0}, {3., 3.523000619010071}]}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 3.287000619010071}], 
          Offset[{-1.5, 0}, {3., 3.287000619010071}]}]}, {
        LineBox[{{4., 3.357774103950346}, {4., 3.093774103950346}}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.357774103950346}], 
          Offset[{-1.5, 0}, {4., 3.357774103950346}]}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 3.093774103950346}], 
          Offset[{-1.5, 0}, {4., 3.093774103950346}]}]}, {
        LineBox[{{5., 3.660104499815529}, {5., 3.360104499815529}}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.660104499815529}], 
          Offset[{-1.5, 0}, {5., 3.660104499815529}]}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 3.360104499815529}], 
          Offset[{-1.5, 0}, {5., 3.360104499815529}]}]}, {
        LineBox[{{6., 3.404775189313747}, {6., 3.0607751893137465`}}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.404775189313747}], 
          Offset[{-1.5, 0}, {6., 3.404775189313747}]}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 3.0607751893137465`}], 
          Offset[{-1.5, 0}, {6., 3.0607751893137465`}]}]}, {
        LineBox[{{7., 3.4196923161754316`}, {7., 3.0236923161754317`}}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.4196923161754316`}], 
          Offset[{-1.5, 0}, {7., 3.4196923161754316`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 3.0236923161754317`}], 
          Offset[{-1.5, 0}, {7., 3.0236923161754317`}]}]}, {
        LineBox[{{8., 3.5403415194069163`}, {8., 3.084341519406916}}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.5403415194069163`}], 
          Offset[{-1.5, 0}, {8., 3.5403415194069163`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 3.084341519406916}], 
          Offset[{-1.5, 0}, {8., 3.084341519406916}]}]}, {
        LineBox[{{9., 3.530601349380937}, {9., 3.006601349380937}}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.530601349380937}], 
          Offset[{-1.5, 0}, {9., 3.530601349380937}]}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 3.006601349380937}], 
          Offset[{-1.5, 0}, {9., 3.006601349380937}]}]}, {
        LineBox[{{10., 4.200140047297829}, {10., 3.6001400472978293`}}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 4.200140047297829}], 
          Offset[{-1.5, 0}, {10., 4.200140047297829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 3.6001400472978293`}], 
          Offset[{-1.5, 0}, {10., 3.6001400472978293`}]}]}, {
        LineBox[{{11., 3.5606083766397987`}, {11., 2.8766083766397985`}}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 3.5606083766397987`}], 
          Offset[{-1.5, 0}, {11., 3.5606083766397987`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 2.8766083766397985`}], 
          Offset[{-1.5, 0}, {11., 2.8766083766397985`}]}]}, {
        LineBox[{{12., 3.668473560465557}, {12., 2.8924735604655574`}}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 3.668473560465557}], 
          Offset[{-1.5, 0}, {12., 3.668473560465557}]}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 2.8924735604655574`}], 
          Offset[{-1.5, 0}, {12., 2.8924735604655574`}]}]}, {
        LineBox[{{13., 2.903224537704217}, {13., 2.0272245377042166`}}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.903224537704217}], 
          Offset[{-1.5, 0}, {13., 2.903224537704217}]}], 
        LineBox[{
         Offset[{1.5, 0}, {13., 2.0272245377042166`}], 
          Offset[{-1.5, 0}, {13., 2.0272245377042166`}]}]}, {
        LineBox[{{14., 4.4017514696648465`}, {14., 3.417751469664847}}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 4.4017514696648465`}], 
          Offset[{-1.5, 0}, {14., 4.4017514696648465`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {14., 3.417751469664847}], 
          Offset[{-1.5, 0}, {14., 3.417751469664847}]}]}, {
        LineBox[{{15., 4.275469993106606}, {15., 3.1754699931066064`}}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 4.275469993106606}], 
          Offset[{-1.5, 0}, {15., 4.275469993106606}]}], 
        LineBox[{
         Offset[{1.5, 0}, {15., 3.1754699931066064`}], 
          Offset[{-1.5, 0}, {15., 3.1754699931066064`}]}]}, {
        LineBox[{{16., 3.753630242124961}, {16., 2.529630242124961}}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 3.753630242124961}], 
          Offset[{-1.5, 0}, {16., 3.753630242124961}]}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 2.529630242124961}], 
          Offset[{-1.5, 0}, {16., 2.529630242124961}]}]}, {
        LineBox[{{17., 4.530896350455578}, {17., 3.1748963504555783`}}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 4.530896350455578}], 
          Offset[{-1.5, 0}, {17., 4.530896350455578}]}], 
        LineBox[{
         Offset[{1.5, 0}, {17., 3.1748963504555783`}], 
          Offset[{-1.5, 0}, {17., 3.1748963504555783`}]}]}, {
        LineBox[{{18., 7.411664824870566}, {18., 5.915664824870565}}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 7.411664824870566}], 
          Offset[{-1.5, 0}, {18., 7.411664824870566}]}], 
        LineBox[{
         Offset[{1.5, 0}, {18., 5.915664824870565}], 
          Offset[{-1.5, 0}, {18., 5.915664824870565}]}]}, {
        LineBox[{{19., 10.621322558436555`}, {19., 8.977322558436557}}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 10.621322558436555`}], 
          Offset[{-1.5, 0}, {19., 10.621322558436555`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {19., 8.977322558436557}], 
          Offset[{-1.5, 0}, {19., 8.977322558436557}]}]}, {
        LineBox[{{20., 5.588113749318706}, {20., 3.7881137493187054`}}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 5.588113749318706}], 
          Offset[{-1.5, 0}, {20., 5.588113749318706}]}], 
        LineBox[{
         Offset[{1.5, 0}, {20., 3.7881137493187054`}], 
          Offset[{-1.5, 0}, {20., 3.7881137493187054`}]}]}, {
        LineBox[{{21., 5.251939961498777}, {21., 3.2879399614987763`}}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 5.251939961498777}], 
          Offset[{-1.5, 0}, {21., 5.251939961498777}]}], 
        LineBox[{
         Offset[{1.5, 0}, {21., 3.2879399614987763`}], 
          Offset[{-1.5, 0}, {21., 3.2879399614987763`}]}]}, {
        LineBox[{{22., 4.615326445630593}, {22., 2.4793264456305932`}}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 4.615326445630593}], 
          Offset[{-1.5, 0}, {22., 4.615326445630593}]}], 
        LineBox[{
         Offset[{1.5, 0}, {22., 2.4793264456305932`}], 
          Offset[{-1.5, 0}, {22., 2.4793264456305932`}]}]}, {
        LineBox[{{23., 3.146055248555829}, {23., 0.8300552485558286}}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 3.146055248555829}], 
          Offset[{-1.5, 0}, {23., 3.146055248555829}]}], 
        LineBox[{
         Offset[{1.5, 0}, {23., 0.8300552485558286}], 
          Offset[{-1.5, 0}, {23., 0.8300552485558286}]}]}, {
        LineBox[{{24., 3.5342511898108393`}, {24., 1.0302511898108395`}}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 3.5342511898108393`}], 
          Offset[{-1.5, 0}, {24., 3.5342511898108393`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {24., 1.0302511898108395`}], 
          Offset[{-1.5, 0}, {24., 1.0302511898108395`}]}]}, {
        LineBox[{{25., 5.083089792677482}, {25., 2.3830897926774814`}}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 5.083089792677482}], 
          Offset[{-1.5, 0}, {25., 5.083089792677482}]}], 
        LineBox[{
         Offset[{1.5, 0}, {25., 2.3830897926774814`}], 
          Offset[{-1.5, 0}, {25., 2.3830897926774814`}]}]}, {
        LineBox[{{26., 6.5999072365122355`}, {26., 3.6959072365122356`}}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 6.5999072365122355`}], 
          Offset[{-1.5, 0}, {26., 6.5999072365122355`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {26., 3.6959072365122356`}], 
          Offset[{-1.5, 0}, {26., 3.6959072365122356`}]}]}, {
        LineBox[{{27., 3.600684117245801}, {27., 0.48468411724580096`}}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 3.600684117245801}], 
          Offset[{-1.5, 0}, {27., 3.600684117245801}]}], 
        LineBox[{
         Offset[{1.5, 0}, {27., 0.48468411724580096`}], 
          Offset[{-1.5, 0}, {27., 0.48468411724580096`}]}]}, {
        LineBox[{{28., 4.196393061664319}, {28., 0.8603930616643183}}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 4.196393061664319}], 
          Offset[{-1.5, 0}, {28., 4.196393061664319}]}], 
        LineBox[{
         Offset[{1.5, 0}, {28., 0.8603930616643183}], 
          Offset[{-1.5, 0}, {28., 0.8603930616643183}]}]}, {
        LineBox[{{29., 5.109933602601889}, {29., 1.545933602601889}}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 5.109933602601889}], 
          Offset[{-1.5, 0}, {29., 5.109933602601889}]}], 
        LineBox[{
         Offset[{1.5, 0}, {29., 1.545933602601889}], 
          Offset[{-1.5, 0}, {29., 1.545933602601889}]}]}, {
        LineBox[{{30., 5.57087526680357}, {30., 1.7708752668035703`}}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 5.57087526680357}], 
          Offset[{-1.5, 0}, {30., 5.57087526680357}]}], 
        LineBox[{
         Offset[{1.5, 0}, {30., 1.7708752668035703`}], 
          Offset[{-1.5, 0}, {30., 1.7708752668035703`}]}]}}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 3.4000000000000004`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692741243651025*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"a", "3.344312133245701`", "0.07262213820301083`", 
        "46.05086294618422`", "1.8810827800725236`*^-26"},
       {"b", "6.6767062809726525`", "0.6625413695517925`", 
        "10.077417936165142`", "1.8050995334621587`*^-10"},
       {"c", "18.801745686804132`", "0.08579442843192973`", 
        "219.14879591186565`", "5.281644768083504`*^-44"},
       {"d", "0.97353371820566`", "0.11319131551845384`", 
        "8.600781020580529`", "4.431333778904255`*^-9"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"a", "3.3158407471401063`", "0.12923228899543235`", 
        "25.657989755619845`", "5.423251278488272`*^-20"},
       {"b", "6.700784584304548`", "0.7233096838729415`", 
        "9.264060379262979`", "1.0160459892163944`*^-9"},
       {"c", "18.80232457849993`", "0.09301025698158508`", 
        "202.15323759639293`", "4.302998133403683`*^-43"},
       {"d", "0.9783897586253757`", "0.12200908057245592`", 
        "8.018991324537948`", "1.691946929758769`*^-8"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False]}], "}"}]], "Output",
 CellChangeTimes->{3.6927412436612797`*^9}]
}, Open  ]]
},
WindowSize->{640, 696},
WindowMargins->{{85, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 25, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 175, 2, 29, "Input"],
Cell[CellGroupData[{
Cell[745, 26, 3810, 94, 267, "Input"],
Cell[4558, 122, 742, 13, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5337, 140, 2305, 58, 182, "Input"],
Cell[7645, 200, 2408, 63, 148, "Output"],
Cell[10056, 265, 1846, 42, 242, "Output"],
Cell[11905, 309, 5450, 154, 267, "Output"],
Cell[17358, 465, 11751, 252, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29146, 722, 4242, 101, 369, "Input"],
Cell[33391, 825, 860, 25, 238, "Output"],
Cell[34254, 852, 12850, 222, 243, "Output"],
Cell[47107, 1076, 23972, 450, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71116, 1531, 2930, 69, 251, "Input"],
Cell[74049, 1602, 384, 10, 36, "Output"],
Cell[74436, 1614, 22849, 432, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97322, 2051, 3440, 81, 335, "Input"],
Cell[100765, 2134, 1936, 42, 44, "Output"],
Cell[102704, 2178, 11293, 198, 239, "Output"],
Cell[114000, 2378, 22060, 419, 243, "Output"],
Cell[136063, 2799, 1174, 26, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137274, 2830, 3739, 94, 284, "Input"],
Cell[141016, 2926, 12638, 220, 243, "Output"],
Cell[153657, 3148, 1936, 41, 44, "Output"],
Cell[155596, 3191, 23705, 446, 243, "Output"],
Cell[179304, 3639, 1118, 24, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180459, 3668, 4996, 113, 454, "Input"],
Cell[185458, 3783, 977, 17, 97, "Output"],
Cell[186438, 3802, 2582, 51, 44, "Output"],
Cell[189023, 3855, 35839, 646, 243, "Output"],
Cell[224865, 4503, 2298, 49, 211, "Output"]
}, Open  ]]
}
]
*)

